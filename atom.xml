<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[文學少年與神話少女]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://otoitsuki.info/"/>
  <updated>2015-05-04T16:00:00.000Z</updated>
  <id>http://otoitsuki.info/</id>
  
  <author>
    <name><![CDATA[Itsuki Lin]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[GAIQ 準備方法與注意事項]]></title>
    <link href="http://otoitsuki.info/%E7%B6%B2%E7%AB%99%E5%88%86%E6%9E%90-GAIQ%20%E6%BA%96%E5%82%99%E6%96%B9%E6%B3%95%E8%88%87%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A0%85.html"/>
    <id>http://otoitsuki.info/網站分析-GAIQ 準備方法與注意事項.html</id>
    <published>2015-02-18T16:00:00.000Z</published>
    <updated>2015-05-04T16:00:00.000Z</updated>
    <content type="html"><![CDATA[<h2 id="什麼是Google_Analytics_Individual_Qualification（GAIQ）？">什麼是Google Analytics Individual Qualification（GAIQ）？</h2><p>下面引用官方說法</p>
<p>「Google Analytics (分析) 個人認證考試」測驗的是基礎和進階的 Google Analytics (分析) 知識。主題包含</p>
<ol>
<li>計劃和原則</li>
<li>導入和資料收集</li>
<li>設定和管理</li>
<li>轉換和歸屬</li>
<li>報表、指標和維度</li>
</ol>
<h2 id="王道準備方法">王道準備方法</h2><p>根據Google官方的說明（<a href="https://support.google.com/analytics/answer/3424288?hl=zh-Hant" target="_blank" rel="external">https://support.google.com/analytics/answer/3424288?hl=zh-Hant</a>），GAIQ的準備方向和範圍出自下面2堂課程：</p>
<ol>
<li><a href="https://analyticsacademy.withgoogle.com/course01" target="_blank" rel="external">數位分析基礎知識（Digital Analytics Fundamentals）</a></li>
<li><a href="https://analyticsacademy.withgoogle.com/course02" target="_blank" rel="external">平台規範（Google Analytics Platform Principles）</a></li>
</ol>
<p>※ 官方提到上述兩堂課程的大綱可以在<a href="https://support.google.com/analytics/topic/6083717?hl=zh-Hant" target="_blank" rel="external">Google Analytics IQ study guide</a>中看到，但目前只有英文版大綱，中文版大綱尚不完整。</p>
<p>所以，最王道的準備方式就是把上述兩個課程全部唸完，延伸閱讀也要看。</p>
<p>也就是<strong>看完影片並弄懂、看過延伸閱讀、寫過習題，且一定要做筆記放到Evernote或其他筆記工具上</strong>。</p>
<p>另外，我還會把影片裡面的字幕用程式抓出來（ex：<a href="http://keepsubs.com/" target="_blank" rel="external">http://keepsubs.com/</a>），放進Evernote裡面作為筆記，不時劃線複習。</p>
<p>如果可以的話，平時就「有目的」多使用GA來分析「真實網站資料」，並且整理報告，解釋分析各種狀況，對於考試也非常有幫助。雖然這種實戰練習不適合想要立刻衝刺考試的人使用，但是最踏實也最有幫助的唸書方法。</p>
<p>其實，對於平時就有在用GA在做分析的人，要考過並不是太難的事情。</p>
<h2 id="考試注意事項">考試注意事項</h2><ol>
<li>只考單選題。題目會寫「下列哪項/哪些…………」，但其實是單選題表單，請安心填寫唯一答案。</li>
<li>目前GAIQ一旦進入考試後就沒辦法暫停（以前有暫停功能，但現在已經沒有）。</li>
<li>每一頁只會出現一個題目，頁面上無法複製文字或按右鍵（懂前端的話也是可以突破限制，但很麻煩所以請專心應考）。</li>
<li>（據說）第一次沒考過的話，七天後可以補考一次。第三次則需要14天後才能考。<br>也就是說除了第一個月可以最多考三次以外，之後一個月最多只能考2次。</li>
</ol>
<h2 id="考試時必備工具">考試時必備工具</h2><p>因為GAIQ可以open book（open browser），所以考試前先開好下面幾個網站分頁作為輔助（以考簡中版本為例）：</p>
<ul>
<li><strong>Google 搜尋引擎</strong>：最為重要的一個東西，可以跨查所有資源</li>
<li><strong>你自己的筆記</strong>：第二重要的東西，自己唸過且寫下筆記是最有印象的，在實際考試時非常非常實用。</li>
<li><strong>Google Analytics</strong>：<a href="https://www.google.com/analytics/web/" target="_blank" rel="external">https://www.google.com/analytics/web/</a><br>建議考試前先把語言切成簡體版，以利對照各種名詞。</li>
<li><strong>url builder（簡體版）</strong>：<a href="https://support.google.com/analytics/answer/1033867?hl=zh-Hans" target="_blank" rel="external">https://support.google.com/analytics/answer/1033867?hl=zh-Hans</a></li>
<li><strong>GA 說明中心（簡體版）</strong>：<a href="https://support.google.com/analytics/?hl=zh-Hans#topic=3544907" target="_blank" rel="external">https://support.google.com/analytics/?hl=zh-Hans#topic=3544907</a></li>
</ul>
<h2 id="其他學習資料">其他學習資料</h2><ul>
<li><a href="http://www.slideshare.net/backtrue/google-analytics-13875934" target="_blank" rel="external">Google analytics教學手冊</a></li>
</ul>
<p>可以作為快速複習Digital Analytics Fundamentals的簡報，裡面有很多操作建議在實際操作上非常有幫助。</p>
<ul>
<li><p><a href="https://analyticsacademy.withgoogle.com/assessment?name=Fin" target="_blank" rel="external">Google官方 20 題模擬考（英文）</a></p>
</li>
<li><p><a href="https://analyticsacademy.withgoogle.com/course02/assessment?name=Final_Assessment" target="_blank" rel="external">Google官方 15 題模擬考（英文）</a></p>
</li>
</ul>
<p>其實就是官方兩個課程的期末考</p>
<h2 id="其他人準備GAIQ的心得與經驗分享">其他人準備GAIQ的心得與經驗分享</h2><ul>
<li><a href="http://analyticsdavis.blogspot.tw/2013/08/GAIQ-test-tips-prepare.html" target="_blank" rel="external">http://analyticsdavis.blogspot.tw/2013/08/GAIQ-test-tips-prepare.html</a></li>
</ul>
<p>非常詳盡且固定更新的GAIQ準備方法</p>
<ul>
<li><a href="http://jasoncarter.io/passing-google-analytics-exam-gaiq-2015/" target="_blank" rel="external">http://jasoncarter.io/passing-google-analytics-exam-gaiq-2015/</a></li>
</ul>
<p>有提供GAIQ大抄（Cheat Sheet）跟題目截圖，當然是英文版的XD</p>
<p><a href="http://blog.winwu.today/2015/02/google-analytics-iq-gaiq.html" target="_blank" rel="external">http://blog.winwu.today/2015/02/google-analytics-iq-gaiq.html</a></p>
<p>分享GAIQ考試準備方向和要點</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="什麼是Google_Analytics_Individual_Qualification（GAIQ）？">什麼是Google Analytics Individual Qualification（GAIQ）？</h2><p>下面引用官方說法</p>
<p>「Goo]]>
    </summary>
    
      <category term="GAIQ" scheme="http://otoitsuki.info/tags/GAIQ/"/>
    
      <category term="網站分析" scheme="http://otoitsuki.info/tags/%E7%B6%B2%E7%AB%99%E5%88%86%E6%9E%90/"/>
    
      <category term="電子行銷" scheme="http://otoitsuki.info/tags/%E9%9B%BB%E5%AD%90%E8%A1%8C%E9%8A%B7/"/>
    
      <category term="網站分析" scheme="http://otoitsuki.info/categories/%E7%B6%B2%E7%AB%99%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[網站企劃流程]]></title>
    <link href="http://otoitsuki.info/UX-%E7%B6%B2%E7%AB%99%E4%BC%81%E5%8A%83%E6%B5%81%E7%A8%8B.html"/>
    <id>http://otoitsuki.info/UX-網站企劃流程.html</id>
    <published>2015-01-11T16:00:00.000Z</published>
    <updated>2015-05-04T16:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>這篇是為了要順一次自己的企劃流程而誕生的產物。</p>
<p>裡面也有從書或文章上學習，或是研究其他案例得到的內容，預計會隨著我自己的學習與經驗補充更多細節，有空也會做實際文件sample分享。<br>因為個人經驗還很不足的關係，有任何質疑或缺點都歡迎提出。</p>
<h2 id="前言">前言</h2><p>首先要說的是，網站企劃流程非常 case by case 。整個流程與產出文件的類型、數量和精細度（詳盡度），都會因為很多原因而有所不同。<br>通常影響企劃流程最大的因素，是專案的規模。<br>大的專案會需要比較多的文件去整理狀況、描述細節，每份產出文件的精細度也會偏高，因為要給比較多的夥伴看（這裡的夥伴甚至包括未來的自己，不要太奢望n個月後還回憶的起當年自己在想什麼）。小的專案可能就會跳過很多步驟，省去很多文件，因為你可能只需要和旁邊的夥伴溝通，兩、三個人取得共識就好。</p>
<p>除此之外，也會和公司或團隊文化、面對的客戶（是上頭還是客戶，客戶是有概念還是沒概念的）等息息相關。因此，每個專案的流程都不一樣是很正常的現象。</p>
<p>不過階段性任務並不會因此而有所改變。<br>整個網站企劃流程階段應該會包括下列幾個階段，（）中代表該階段可能會產出的文件：</p>
<ol>
<li>需求分析（服務建議書、Function Map）</li>
<li>調查研究（使用者資料、市場調查資料）</li>
<li>具體化功能與架構（Function List、Sitemap）</li>
<li>規劃動線與流程（工作流程圖、UI Flow、IA）</li>
<li>決定頁面元素與配置（Wireframe）</li>
<li>製作雛型，測試驗證（Prototype）</li>
</ol>
<p>就算實際執行時有階段被省略，但那通常是代表該階段只存在腦中後被略過。</p>
<p>還有這邊只有列出「開發階段（程式與美術正式動工）以前」的網站企劃流程，開發階段期間和上線營運後，網站企劃還是要做事的，這邊又是更 case by case ，也不在本篇討論範圍。</p>
<p>但這邊想要先強調一個觀點：網站不是一個開發出來就結束的東西，網站企劃的工作也不止於上線那刻為止。<br>正確的產品規劃（不限於網站）應該會是一個循環：</p>
<p>規劃→開發上線→測量→從中學習</p>
<p>上述階段完成後，最後會再次回到規劃階段，但這次不是從頭規劃，而是局部性進行改善與修正，或者是累積到一定待修改的量之後，整個大改版。<br>絕大部分網站通常都被當成免洗網站（但其實很多都沒有免洗屬性），包括測量在內的後續階段會被忽視，但那真的不是一個良好的產品生態。</p>
<h2 id="開發階段前的網站企劃流程">開發階段前的網站企劃流程</h2><h3 id="需求分析">需求分析</h3><p>做任何一件事情都要先確立「目標」。就算是製作兩個同樣類型的網站，目標不同也會導致網站架構不一樣。所以網站企劃第一步就是要先去問清楚網站的目標，釐清提出目標者（上頭or老闆or整個團隊）的目標和需求。弄清下面幾件事：</p>
<ul>
<li>為什麼要做這個網站？</li>
<li>這個網站做好後希望達到怎樣的成效？</li>
<li>網站使用族群？使用者在該網站從事怎樣的任務？</li>
<li>（提目標者眼中）有哪些網站核心功能？</li>
<li>死線是何時？為什麼？<br>了解死線界定的原因對於安排優先順序上還滿有幫助的。</li>
<li>有哪些可用資源？要用哪些資源？<br>舉凡預算、人力、硬體設備、開發技術、可用素材等都要問一問。<br>不過小的團隊幾乎不用問這個問題，因為很多都是一目了然or沒得商量的事。</li>
</ul>
<p>釐清上述問題之後，再來就是基於這些回覆，著手產出相關文件並且進行內部討論。<br>依照不同型態的專案，會產出不同的東西：</p>
<ul>
<li><p>接案型→服務建議書<br>接案型的公司通常走在時代前端，在這個階段就必須先做簡單的調查研究，先準備Sitemap等給客戶確認網站大致架構。<br>個人沒待過接案公司，只有之前做外包時做了簡易版的服務建議書，裡面包括：</p>
<ul>
<li>網站建置規劃</li>
<li>網站地圖（Sitemap）</li>
<li>網站功能簡介</li>
<li>網站版面參考</li>
<li>主視覺設計參考</li>
<li>報價表</li>
</ul>
</li>
<li><p>改版型→舊版網站的Function List 若是要進行改版，首先就是要先把原本網站的功能先統統列出來，如果有當年的網站規劃文件可以直接參考使用當然很好。<br>如果沒有，那就是從頭自己來，列出現有網站的功能並做分類，寫出現有網站的Function List。</p>
</li>
<li><p>內部開發型→Function Map 小公司或小團隊通常都是這一型，專案出發點可能是上頭的一句話或是某人的某個idea。這種型態在需求分析會議完畢之後，主要開發團隊就要來場內部頭腦風暴，討論出網站初步核心的功能，繪製成Function Map。<br>通常我製作Function Map都會先將功能進行區塊分類，比方說分成「商品」、「會員」、「購物」等大類別，再往下延伸補完各分類下面的各項功能。</p>
</li>
</ul>
<h3 id="調查研究">調查研究</h3><p>進行收集資料、調查與訪談。這邊因為我做的不夠多，無法提出太多具體建議和方向，以我自己有做過的來說有下面幾項：</p>
<ul>
<li><p>使用者訪談<br>跟使用者進行面談，了解他們的需求，從中發現可以改進或考量進網站設計的觀點。<br>以網站改版專案為例，最簡單就是訪問當前且最近的使用者=同事，了解他們對目前網站的看法，如：</p>
<ul>
<li>你的工作上會用到網站哪些區塊？</li>
<li>你在操作網站時曾碰上哪些問題？是怎麼解決的？</li>
<li>你希望可以新增哪些功能來增進你的工作效率？</li>
<li>工作上碰到的客人（公司外部的使用者）曾經反映過哪些網站的問題？</li>
</ul>
</li>
</ul>
<p>使用者訪談是相當常見的研究方法，這塊做的最不錯的就屬UX Designer，建議可以找UX的書作為設計訪談問題的參考。</p>
<ul>
<li>市場調查研究<br>在此個人進行過的是「標竿研究法」，就是去研究業界或國內外相同類型網站的架構與設計。<br>具體方法是利用試算表畫表格後，列出想要探討的項目作為縱軸，想探討的多個標竿網站則放在橫軸，然後填滿表格。<br>進行這個研究是為了找出其他網站有哪些好的部份、有哪些問題可以彌補加強，並且藉由整理資料和研究標竿網站的行動，激出企劃者更多的想法。</li>
</ul>
<h3 id="具體化功能與架構">具體化功能與架構</h3><p>以前面階段的資料作為基底，討論出可以開發的功能，產出Sitemap與詳細的Function List。<br>如果是改版型的專案，這裡產出的就是新版網站的Function List，並且還會另外再做一張和舊版List比較之後，新增功能的List。</p>
<p>Sitemap是呈現網站架構用的資料，呈現出網站的頁面相關關係，而各頁面有哪些功能與詳細介紹，則是寫在Function List之上。</p>
<p>Function List則是前面Function Map的進階版本（有些人會把這些稱之為系統規格書，有些人則會稱之為Module List。），列出所有功能與詳細說明，後續開發階端都會以此列表為準。所以如果後續到了繪製流程圖或Wireframe階段，才發現功能有所闕漏的話，都要先退回這步進行修改。</p>
<p>另外，我個人是會在這個階段，連同網站導覽設計與頁面預計使用的設計模式（Pattern），一併寫在Function List的旁邊，方便後續步驟進行發想設計。</p>
<p>這邊可以是整個製作團隊一起進行討論後再產出文件，也可以由企劃先起頭，做完後再給團隊其他人做技術評估與確認。<br>無論如何，撰寫文件不是為了產出而產出，不管是Sitemap或Function List或之後的資料，都要拿去給其他團隊成員看過，確認或討論有沒有問題，再往下進行。</p>
<p>還有以一個包括前後台的大型網站（ex：商城電子商務網站）來說，除了列舉出功能的Function List以外，其實還會需要一份詳盡說明的「系統規格書」，包括資料庫table定義、資料欄位長度、內容屬性、區塊文字多寡、資料排序方式等，都會在系統規格書中一一寫明。 系統分析在軟體開發專案中其實是一個專門的職位，因為個人在這方面還非常的弱，最多都只有負責到前台的部份，等日後磨練磨練再補完這塊。</p>
<h3 id="規劃動線與流程">規劃動線與流程</h3><p>知道規劃中的網站有哪些功能後，就可以開始繪製流程圖或是資訊架構圖（IA）。</p>
<p>流程圖比較好理解，簡單來說就是畫出所有任務的流程。<br>使用者在使用網站時，大都身懷需求和任務，他可能是想要買一本書，也可能是想查看他前天的訂單寄送進度。每一項任務都是透過一連串動作才得以完成，所以流程圖就是在幫使用者規劃使用網站的動線，以使用者的任務為出發點，他在進行一個任務時會經過哪些頁面，碰到哪些狀況分歧，統統都要畫進流程圖裡面，因此流程圖可能會非常多張，而且前後台都會需要規劃設計。</p>
<p>如果規劃的網站後台流程有牽連到其他非線上活動ex：倉庫出貨流程等，那麼也需要針對這些相關活動進行了解，並繪製交互影響的流程圖。當網站流程牽連到其他部門的作業流程時，通常是跟其他負責的部門面談，一起討論線上和實體的活動流程詳情。有時候也可能是由網站企劃這邊決定，在主管或上頭確認過流程沒問題後，所有相關部門就照網站企劃訂立的流程走。</p>
<p>至於IA圖，則有點像是在Sitemap上進行分類與導覽設計，用一張圖交代出整個網站的資訊架構。</p>
<p>個人感覺IA圖比流程圖好畫，也非常清楚易懂，但在規劃大型網站，或者是在繪製Wireframe發現腦子堵塞的時候，我還是會乖乖繪製任務流程圖，幫助自己在規劃上釐清思路。</p>
<p>另外，如果是APP專案或是小型的輕架構網站，可以考慮不繪製流程圖，而是直接產出UI flow，交代好所有功能頁面的如何連結即可。由於UI Flow比較難去呈現複雜的任務動線，所以若是規劃功能較多的中大型網站，還是得乖乖畫任務流程圖。</p>
<p>個人覺得影響使用者體驗最大的一個要素，就是網站的動線流程，絕大多數網站的UX關鍵都在這裡。</p>
<h3 id="決定頁面元素與配置">決定頁面元素與配置</h3><p>任務流程都決定完畢後，再來就可以進入到視覺化的階段，決定每個頁面的元素與版面配置，繪製出Wireframe。</p>
<p>Wireframe中文翻譯是線框圖，相當於是網站頁面的草圖，在後續的開發階段中不管是美術設計還是程式開發，都要看著這堆Wireframe進行設計或coding。</p>
<p>Wireframe的目的在於提供內容元素和架構，並展示出元素的排序與層級。也就是這個頁面應該要有哪些東西、這些東西的重要性順序如何、這些東西的做成大腸包小腸（層級）是怎樣呈現出來。</p>
<p>因此以設計師觀點來看，他們會把Wireframe當成是設計Layout的準則，該有的元素和區塊順序與等級要跟Wireframe一樣，但並不需要照Wireframe進行版面設計。</p>
<p>繪製Wireframe的工具很多種，可以選擇自己順手…………或是公司有的來使用，個人在Windows上是用Pencil（Free，跨平台），在Mac上則是用Sketch3（99鎂，Mac限定，但易用到掉淚）。</p>
<p>個人覺得如果把前面的規劃流程都做好後，Wireframe反而是最簡單的一個階段。如果在這裡卡關，通常問題是前面的流程沒有規劃周全，或是腦內的設計模式不夠多，後者請多多看網站累積腦內設計模式，或是買歐萊禮出的「oo介面設計模式」（oo可以帶入行動或是網頁）聖經書擺在桌上翻閱參考。</p>
<p>其實，不只是網站企劃會用到Wireframe，平時如果有和設計師一起合作執行平面設計等專案的話，都可以先產出Wireframe作為草圖，之後再交由設計師進行設計。這種繪製Wireframe草圖的練習可以平日常常進行，對於腦內累積頁面設計模式很有幫助。</p>
<h3 id="製作雛型，測試驗證">製作雛型，測試驗證</h3><p>有了Wireframe，下一個步驟就是以Wireframe為基底製作網站雛型（Prototype），也就是集所有前期規劃為大成的最後一個步驟。</p>
<p>之所以要製作Prototype，最主要是用來確認互動設計，並且將做好的Prototype拿去做簡單的使用者測試。<br>因為其他前面所有的步驟，都不是能夠拿給使用者實際操作的東西，只有Prototype在稍微包裝一下後，可以拿給使用者做測試。</p>
<p>用Prototype做測試的方法，通常是讓使用者觀看Prototype，並詢問使用者注意到什麼，請使用者試著猜想各區塊的用處，以及指定任務請使用者完成，並觀察使用者是如何操作該Prototype。</p>
<p>前期能夠做測試是一件非常幸福也非常重要的事，就算只拿給一個人做測試，得到的回饋也會出乎意料的多且非常有用，可以突破很多開發階段的盲點。</p>
<p>做Prototype的工具和方法很多種，可以選擇自己順手或是公司有的來用，附帶一提似乎很多人都是用Axure，但因為我公司沒買，所以我也從來沒用過。通常我是直接用Html自己刻（Bootstrap萬歲），或是用一些線上工具如InVison來製作。</p>
<h2 id="推薦參考書籍：">推薦參考書籍：</h2><ul>
<li>資訊架構學 網站應用<br>偉哉北極熊書，內容很硬，看完一次會立刻忘記，但請邊規劃邊翻。</li>
<li>別讓我動腦想<br>UX聖經，很薄很好讀，推薦使用者訪談的章節，可以直接照著做。</li>
<li>為什麼他接的案子比我多？<br>書名翻譯很爛，但內容超棒，雖然是給設計師的書，但也有很多企劃相關知識與實戰技巧。</li>
<li>Information Architecture 100：100個網站規劃必備的知識</li>
<li>網頁介面設計模式</li>
<li>行動介面設計模式</li>
<li>操作介面設計模式<br>設計後台必備書籍！</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>這篇是為了要順一次自己的企劃流程而誕生的產物。</p>
<p>裡面也有從書或文章上學習，或是研究其他案例得到的內容，預計會隨著我自己的學習與經驗補充更多細節，有空也會做實際文件sample分享。<br>因為個人經驗還很不足的關係，有任何質疑或缺點都歡迎提出。</p>
<h2]]>
    </summary>
    
      <category term="UX" scheme="http://otoitsuki.info/tags/UX/"/>
    
      <category term="網站企劃" scheme="http://otoitsuki.info/tags/%E7%B6%B2%E7%AB%99%E4%BC%81%E5%8A%83/"/>
    
      <category term="UX" scheme="http://otoitsuki.info/categories/UX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[RGBA 構思 Thinking Structure (2015/01/11) 筆記]]></title>
    <link href="http://otoitsuki.info/%E5%89%8D%E7%AB%AF%E8%A8%AD%E8%A8%88-RGBA%20%E6%A7%8B%E6%80%9D%20Thinking%20Structure%20(2015-01-11)%20%E7%AD%86%E8%A8%98.html"/>
    <id>http://otoitsuki.info/前端設計-RGBA 構思 Thinking Structure (2015-01-11) 筆記.html</id>
    <published>2015-01-10T16:00:00.000Z</published>
    <updated>2015-05-04T16:00:00.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li>活動名稱：構思 Thinking Structure<br><a href="http://rgba.kktix.cc/events/tscss" target="_blank" rel="external">http://rgba.kktix.cc/events/tscss</a></li>
</ul>
<h2 id="建造世界奇觀前，先打好地基吧！">建造世界奇觀前，先打好地基吧！</h2><p>SHENG-LI<br>unfold 前端設計師</p>
<p><a href="https://speakerdeck.com/shengli1989/tscss-manage-css" target="_blank" rel="external">https://speakerdeck.com/shengli1989/tscss-manage-css</a></p>
<h3 id="易管理的css">易管理的css</h3><ol>
<li>容易理解，打開資料夾可以看的懂</li>
<li>容易定位，不管多龐大，在要修時找的到</li>
<li>易維護，要修改時不會跟其他的打架</li>
</ol>
<h3 id="如何打造">如何打造</h3><ol>
<li>SASS</li>
<li>由大化小，按功能或部位拆解成多個檔案，每份檔案專注做一件事</li>
<li>建立分類，按照自己規劃方式分類，目的讓css一目了然</li>
</ol>
<h3 id="公司自製_Starter_（改mvcss等等來的）">公司自製 Starter （改mvcss等等來的）</h3><ol>
<li>Setup <ul>
<li>可跨專案使用</li>
<li>normalize,base(h1,行距，字體）</li>
<li>變數</li>
<li>layout最:大寬度，左右兩欄排版</li>
</ul>
</li>
<li>Components 命名非常重要 <ul>
<li>Button</li>
<li>Form</li>
</ul>
</li>
<li>Partial 部件樣式 <ul>
<li>Header</li>
<li>Footer</li>
</ul>
</li>
<li>Page 特殊頁面排版放這 <ul>
<li>About（只有這頁有三欄）</li>
<li>Contact</li>
<li>等等</li>
</ul>
</li>
</ol>
<ul>
<li><p>其他細節： style guide,命名規範</p>
</li>
<li><p>爭議性： 有爭議的先從Partial開始寫。 特殊頁面的header寫在page裡。 特殊部件寫在header裡，ex:bigheader</p>
</li>
<li><p>命名訣竅：</p>
</li>
</ul>
<p>可以分成兩種</p>
<ol>
<li>抽象grid</li>
<li>直呼其名Post,news</li>
</ol>
<h2 id="Pinkoi_的_RWD">Pinkoi 的 RWD</h2><p>ADAM WANG Pinkoi 前端工程師</p>
<p><a href="http://www.slideshare.net/adamp3wang/pinkoi-rwd-rgba" target="_blank" rel="external">http://www.slideshare.net/adamp3wang/pinkoi-rwd-rgba</a></p>
<ul>
<li>Pinkoi最重要三件事：逛買問。</li>
<li>任何時候裝置要好體驗，要快</li>
<li><p>RWD首先考慮是類型，是app（以互動為主）還是page（是以資訊為主）？（是以資訊為主）？</p>
</li>
<li><p>手機上一二事</p>
<ul>
<li>漢堡選單，為何廣泛使用？因為是次要的擴展導覽，可以先藏起來</li>
<li>幾乎不會用tab</li>
<li>圖片不能太多</li>
<li>動畫，一秒裡面有60畫格也必須很順暢，業界標準</li>
</ul>
</li>
<li><p>Redirect問題</p>
<ul>
<li>Seo不良</li>
<li>複製網站</li>
</ul>
</li>
</ul>
<p>解決方案：使用RESS：同個網站，針對不同裝置吐不同的碼 （Modernizr.touch，看有沒有觸控功能吐不同的碼。但會誤判）</p>
<h3 id="技術相關實做方法">技術相關實做方法</h3><ul>
<li><p>環境區隔 桌面jQuery, 手機用Zepto，或pure Js</p>
</li>
<li><p>LocalStorage 使用者瀏覽紀錄，讓大部份儲存在使用者端手機上玩，最後再存在server Ex 最近瀏覽過的網頁等等</p>
</li>
<li><p>History.pushStatus 讓使用者在同個頁面相同網址，進行部分讀取，加速ux，還是可以用上一頁</p>
</li>
<li><p>Lazy load</p>
</li>
<li><p>Fluid layout</p>
</li>
<li><p>一次性網頁就用RWD不用RESS，內容重複高，不太用互動</p>
</li>
</ul>
<h3 id="RWD實戰心得">RWD實戰心得</h3><ul>
<li>用%處理長度，保持等比</li>
<li>考慮retina問題，目前img srcset,picture支援度差，用mq做比較好 <ul>
<li>用 padding-bottom 算圖片高度，算出長寬比EX1:0.44 <ul>
<li>background:contain;</li>
<li>padding-botton:44％;</li>
</ul>
</li>
</ul>
</li>
<li>Font size calc(50px-4vw)</li>
<li>Think Prototype</li>
<li>RWD email 是個地獄，只能踹跟error，找不到好方法哭哭</li>
</ul>
<h3 id="測試">測試</h3><p>Chrome dev tool 用模擬器，做mobile都用手機 </p>
<en-media style="height: auto;" width="2592" height="1936" type="image/jpeg" hash="a77dd5af7edbfda87f013c5305019e2b">

<h2 id="KKBOX_官網樣式管理的現況以及近期計畫">KKBOX 官網樣式管理的現況以及近期計畫</h2><p>HSINYU CHOU F2E@KKBOX</p>
<ul>
<li>主要用OOCSS因為很簡易</li>
<li>用bootstrap+自行處理 modules +從內容發展的 Components</li>
<li>由編輯企畫決定區塊頁面如何呈現、前端規劃區塊分類</li>
<li><p>藉由辨認「內容類型」分組</p>
<ul>
<li>音樂資訊：聲音，影片，文字（專欄等</li>
<li>人的資訊：歌手，一起聽台長，一般用戶</li>
<li>社群活動：一起聽，撥歌動態</li>
<li>操作介面：播放，清單，關注，分享</li>
</ul>
</li>
</ul>
<p>上述區塊形成共同語言，企畫會把它當成是一個發想的單位。在同個軌道上前進，快速上手討論。</p>
<h3 id="Components的命名">Components的命名</h3><ul>
<li>Albums <en-media style="height: auto;" width="2592" height="1936" type="image/jpeg" hash="4e85f3c0027bdf309b2987f01b80d153"></en-media></li>
<li>Chart</li>
<li>Article</li>
<li>Artist-info</li>
</ul>
<p>Resuable 每個 web view 都能用，只要是相同內容頁面，html就應該要一樣</p>
<h3 id="區域微調">區域微調</h3><ul>
<li>Name space class <ul>
<li>用母元素決定下面components 環境調整</li>
</ul>
</li>
<li>Stacking class <ul>
<li>加 class 做變性state狀態的改變</li>
</ul>
</li>
</ul>
<p>上述架構好處：</p>
<ul>
<li>搬到哪都能用</li>
<li>容易溝通與協作</li>
</ul>
<p>上述壞處：</p>
<ul>
<li>很多層class，拉高權重</li>
<li>評估是否要用BEM，要搭配JS使用</li>
</ul>
<h3 id="Style_guide">Style guide</h3><ul>
<li>統一跨平台</li>
<li>避免新元件出來還是錯刀</li>
<li>改版時的規格文件，告訴我們有哪些是要做的</li>
<li>用Hologram <en-media style="height: auto;" width="2592" height="1936" type="image/jpeg" hash="b8817371e8e0f57657034b231e792f18">

</en-media></li>
</ul>
<p>未來不確定會不會改版BEM，掙扎中</p>
<h3 id="其他">其他</h3><ul>
<li>泰文最長的語系：處理方式是改翻譯，改版面設計，讓資料容的下</li>
<li>Style Guide：用Generator可以在SASS註解，直接產生</li>
</ul>
<h2 id="前端工程師眼中的_CSS_framework">前端工程師眼中的 CSS framework</h2><p>TonyQ 大大</p>
<h3 id="Grid">Grid</h3><ul>
<li>歷史講古時間：早期960 Grid 沒有行動版呀，所以bootstrap會紅</li>
<li>用閱讀的資料流去設計css grid</li>
<li>要切幾格？很重要</li>
<li>挑選framework先看grid</li>
</ul>
<h3 id="Form">Form</h3><ul>
<li>挑選framework第二個看form</li>
<li>客戶最想要做好的東西，互動性最高，關注性最高</li>
<li><p>細節討論</p>
<ol>
<li>格子千萬要夠大 手指太大了，手機上點小框框起來很痛苦，很容易點錯</li>
<li>Modal Dialog</li>
<li>表單驗證：因為要設計邏輯，不該歸framework處理，每個表單的設計邏輯都不同 愛用：jQuery驗證，還有一個是jQ外掛？</li>
<li>framework只管錯誤alert樣式</li>
</ol>
</li>
</ul>
<h3 id="Table">Table</h3><ul>
<li>扣掉div以外table最常用</li>
<li>格線，表頭，顧一下就好</li>
</ul>
<h3 id="eco_system_←重要">eco system ←重要</h3><ul>
<li>只要一個晚上，就可以把bootstrap theme改成自己要的頁面</li>
<li>從現有的pattern直接發展，改pattern改出自己的風格</li>
<li>一個東西活的不夠久，不會有pattern，這是社群的力量</li>
<li>做UI時要考慮一致性，和其他人的UI一致性，讓使用者感到熟悉，快速使用</li>
<li>抓到pattern的特徵，就會讓人了解要怎樣用</li>
<li>選一個fw可以解決多少問題是挑framework的要點</li>
</ul>
<h3 id="改bootstrap">改bootstrap</h3><ul>
<li>不要動原始碼，加class就好</li>
<li>不要一開始就想reuse，等到需要reuse時再去reuse</li>
<li>Css的封裝性很頭痛</li>
<li>Shadow zone？←根本估不到這一定是我筆記錯了</li>
</ul>
<h2 id="上午PANEL">上午PANEL</h2><h3 id="Style_guide_如何落實，class命名等">Style guide 如何落實，class命名等</h3><ul>
<li>先建後拆，告訴他已經有輪子了不要再建一次</li>
<li>嚴格規範css位置，知道現在的元件有哪些狀態，不要影響到其他的文件就好</li>
<li>開一份文件共同維護style guide，取得共識。</li>
<li>指定共用framework</li>
</ul>
<h3 id="app和網頁版的各自的出發點？">app和網頁版的各自的出發點？</h3><ul>
<li>網頁版給初心者，免洗EX：遊戲等也放網頁版</li>
<li>App給老客戶</li>
<li>兩個都有適用場景</li>
</ul>
<h3 id="Kkbox_靈感來源">Kkbox 靈感來源</h3><ul>
<li>看競爭對手</li>
<li>看業界規範，購物車該怎樣就怎樣</li>
<li>技術上多看國外學校</li>
<li>團隊不斷與客戶討論得到最好的</li>
<li>設計很難跟靈感扯上關係。參考好的網站，刪去不好的部分</li>
<li>Y2b的話，盡快做雛形，測試，修改</li>
<li>多逛codepen等參考他人是怎麼做的</li>
</ul>
<h3 id="網站寬度是用哪種單位">網站寬度是用哪種單位</h3><ul>
<li>跟Bootstrap共進退</li>
<li>layout用％，設計用px</li>
<li>Components 用px</li>
<li>分類判斷 <ul>
<li>大圖片背景percent</li>
<li>人頭小圖固定px</li>
</ul>
</li>
<li>Padding margin 用px，避免撐爆，還有要加rwd考量，同樣px電腦手機看起來感覺不同</li>
</ul>
<h3 id="商品模組圖片長寬比">商品模組圖片長寬比</h3><ul>
<li>Padding-bottom跟mq走，不同中斷點，不同比例</li>
</ul>
<h3 id="網站無障礙怎麼做">網站無障礙怎麼做</h3><ul>
<li>內容網站比較好做</li>
<li>點tab的順序可以考慮做</li>
<li>用裸露的html判斷內容流可不可讀</li>
<li>沒用過盲人瀏覽器就是盲人摸象，但有力氣配合就配合</li>
<li>有專家給意見，以專家意見做</li>
</ul>
<h3 id="語義化網站">語義化網站</h3><ul>
<li>就算是需要reuse的網站，每個layout是獨立的話，就不需要語義化</li>
<li>一個partial需不需要重複？依照不同狀況判斷</li>
<li>Ex：new-list這個命名已經很好了，不用動</li>
<li>Css語義化指只是為了方便維護，但Html語義化非常重要</li>
<li>Html語義是架構，h1是標題，不是用來變大的樣式</li>
<li>Oocss創始者說：現在可以追求視覺語義化</li>
</ul>
<h2 id="CSS架構如何加速功能開發">CSS架構如何加速功能開發</h2><p>Oliver<br>Faria Systems Ltd. 前端工程師</p>
<p><a href="http://www.slideshare.net/ChongLin/css-structure" target="_blank" rel="external">http://www.slideshare.net/ChongLin/css-structure</a></p>
<ul>
<li>把前端常用的module抽出來，基於bootstrap去擴充</li>
<li>Master UI Kit <a href="https://dribbble.com/shots/1501436-Master-UI-Kit" target="_blank" rel="external">https://dribbble.com/shots/1501436-Master-UI-Kit</a></li>
<li>在github做一個文件style guide，做這個最主要是為了各國工程師合作</li>
<li>Css一個頁面帶兩個，application和contact，作分流</li>
<li>每個客製化partial裡面會分成hd和bd兩部份（頭和身體） .about-store .hd .bd</li>
<li><p>Css 架構一開始就要做，還要持續一直做</p>
</li>
<li><p>跨國團隊要怎樣合作？ 在平台上討論，前端不動設計，但有衝突就去問PM，多討論</p>
</li>
</ul>
<h2 id="國會無雙_–_大革命">國會無雙 – 大革命</h2><p>TOUNEKO<br>unfold 前端設計師</p>
<ul>
<li><p>以使用者為中心，重新思考</p>
</li>
<li><p>重新定義首頁，把賽事拆成賽前賽中賽後，定義這三種賽事</p>
<ul>
<li>前：預報</li>
<li>中：直播</li>
<li>後：報告</li>
</ul>
</li>
<li><p>參考itunes的slider</p>
<ul>
<li>Tab: 用bootstrap的js，css自己刻</li>
<li>Slider:自行修改slick.js</li>
</ul>
</li>
<li><p>LiveBar 用CSS key frame，靈感來自NBA 先準備一張圖片，然後用keyframe讓他動</p>
</li>
<li><p>字體大小參考 iA.net 副標一律置中，小標置左</p>
</li>
<li><p>想邊看逐字稿邊看網站，參考TED網站設計 影片往下卷，會縮到右上角</p>
</li>
<li><p>參考twitter更改排版變簡潔，不會太多線條</p>
</li>
<li><p>參考twitterbot做自動落體dialog 用edge做設計，但自己寫code</p>
</li>
<li><p>放入大量阿草圖片，降低嚴肅感</p>
</li>
<li><p>客戶要求不合理，該怎麼辦？ 用正確的數據，去說服客戶，做出比較好的</p>
</li>
</ul>
<h2 id="元件css參數化">元件css參數化</h2><p>SIMON PAI 普奇科技前端工程師</p>
<ul>
<li>統一設計 style guide</li>
<li>統一實作 命名策略</li>
</ul>
<p>但如果你是元件集的創作者會碰到問題</p>
<ul>
<li>統一設計 <ul>
<li>外觀一致性，但無法預測使用者會如何排列你的元件</li>
</ul>
</li>
<li>統一設計 <ul>
<li>Dry</li>
</ul>
</li>
</ul>
<h3 id="元件語義">元件語義</h3><p>Ex:分隔線的意義？分隔上下左右</p>
<ul>
<li>區隔 <ul>
<li>Ex:容器box</li>
</ul>
</li>
<li>操作</li>
<li><p>狀態</p>
<ul>
<li>語義定義是你可以依他來設計</li>
</ul>
</li>
<li>但必要時可以做取捨，依照不同情況不同狀況做取捨 <ul>
<li>語義元素無法窮盡</li>
</ul>
</li>
<li>做到70.80啪就很好，剩下硬幹</li>
</ul>
<h3 id="建立Demo">建立Demo</h3><ul>
<li>外觀盡量展示出來</li>
<li>外觀一致放一起</li>
</ul>
<h3 id="CSS_命名策略">CSS 命名策略</h3><ul>
<li>表意 <ul>
<li>Z-panel</li>
</ul>
</li>
<li><p>表象</p>
<ul>
<li><p>Red</p>
</li>
<li><p>CSS是樣式和DOM的合約 最終都是將外觀值賦予到意上</p>
</li>
<li><p>統一設計，統一實作</p>
</li>
</ul>
</li>
</ul>
<h2 id="別亂來交給我們來">別亂來交給我們來</h2><p>大熊 BEAR GSS 叡揚資訊人因設計部</p>
<p><a href="http://www.slideshare.net/desbearli/gss-fed" target="_blank" rel="external">http://www.slideshare.net/desbearli/gss-fed</a></p>
<ul>
<li>為了和不同團隊合作，建立規範</li>
<li>設計部門整理出命名規則，參照bootstrap，並和工程部討論</li>
<li>除了style guide以外，整理出UI Kit</li>
<li>（命名參考） .wrapper .nav .list .detail</li>
<li>系統軟體的設計，會對可用空間的最大寬度做限制</li>
</ul>
<h3 id="三欄設計：">三欄設計：</h3><ul>
<li><p>方案1. 不能全用percent，左右固定寬度，中間做fluid。 且順序是 .col-left .col-right .col-center</p>
</li>
<li><p>方案2. Table cell</p>
</li>
<li><p>分案3. Inline block</p>
</li>
</ul>
<h2 id="講個秘訣給沒參加_dotCSS/dotJS_的_Even">講個秘訣給沒參加 dotCSS/dotJS 的 Even</h2><p>HLB Dad of 2. Director@KKTIX</p>
<h3 id="DotCSS_dotJS_歐洲最大的研討會">DotCSS dotJS 歐洲最大的研討會</h3><p>歐洲沒有人在週末辦研討會</p>
<ul>
<li>不用寫important的方法 <code>.disabled.disabled.disabled{}</code> 寫三次，增強權重，這樣就不用important</li>
<li>Suitcss</li>
</ul>
<h2 id="下午Panel">下午Panel</h2><h3 id="如何進行UX?">如何進行UX?</h3><ul>
<li>看客服信，看使用者需要的功能，企劃提出做，由設計師開始做</li>
<li>分析標竿性網站，參考與使用</li>
<li>看客戶的需求，與客戶討論，客戶的要求有沒有道理</li>
</ul>
<h3 id="自動化測試">自動化測試</h3><ul>
<li>Selenium</li>
<li>人力人工測試是基本款</li>
</ul>
<h3 id="多國語系建議作法">多國語系建議作法</h3><ul>
<li>語系檔搞定。 <ul>
<li>日文字用中文字體很怪，html還是要設lang，用適合的字體</li>
</ul>
</li>
<li>由左到右或反過來，日期，貨幣等格式不同很麻煩，見招拆招</li>
<li>用fire.app做partial改 <ul>
<li>但是排版還是要分開處理</li>
</ul>
</li>
</ul>
<h3 id="目前公司吸引你的地方在哪？">目前公司吸引你的地方在哪？</h3><ul>
<li>公司最美的風景是人</li>
<li>跟國外的同事一起做事很有趣</li>
<li>禮拜五共同研究日</li>
<li>有挑戰，不太會加班</li>
<li>對上面負責，老闆自由，下面的也會自己做好，只管issue不管人，部門福利好</li>
<li>既鬆散，又凝聚</li>
</ul>
<hr>
<h2 id="其他人的強大筆記">其他人的強大筆記</h2><p><a href="http://wcc723.github.io/css/2015/01/13/css-magic/" target="_blank" rel="external">http://wcc723.github.io/css/2015/01/13/css-magic/</a></p>
</en-media>]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li>活動名稱：構思 Thinking Structure<br><a href="http://rgba.kktix.cc/events/tscss" target="_blank" rel="external">http://rgba.kktix.cc/event]]>
    </summary>
    
      <category term="RGBA" scheme="http://otoitsuki.info/tags/RGBA/"/>
    
      <category term="SASS" scheme="http://otoitsuki.info/tags/SASS/"/>
    
      <category term="css架構" scheme="http://otoitsuki.info/tags/css%E6%9E%B6%E6%A7%8B/"/>
    
      <category term="前端設計" scheme="http://otoitsuki.info/tags/%E5%89%8D%E7%AB%AF%E8%A8%AD%E8%A8%88/"/>
    
      <category term="筆記" scheme="http://otoitsuki.info/tags/%E7%AD%86%E8%A8%98/"/>
    
      <category term="前端設計" scheme="http://otoitsuki.info/categories/%E5%89%8D%E7%AB%AF%E8%A8%AD%E8%A8%88/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在 Windows 7 環境安裝 Middleman]]></title>
    <link href="http://otoitsuki.info/%E5%89%8D%E7%AB%AF%E8%A8%AD%E8%A8%88-%E5%9C%A8%20Windows%207%20%E7%92%B0%E5%A2%83%E5%AE%89%E8%A3%9D%20Middleman.html"/>
    <id>http://otoitsuki.info/前端設計-在 Windows 7 環境安裝 Middleman.html</id>
    <published>2014-11-19T16:00:00.000Z</published>
    <updated>2015-05-04T16:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>起因是因為我想要用autoprefixer，但是因為fire.app在windows的環境下讓我沒辦法直接裝。<br>因此就把腦筋動到用Middleman上去。</p>
<p>然而眾所皆知，MAC上只需要一行<code>$ gem i middleman</code>解決的東西，在windows上都是鬼打牆。   </p>
<p>奮鬥好幾天後終於把環境搞定，決定將這些鬼打牆後得到的事蹟分享出來，希望對他人有所幫助。</p>
<h3 id="方法一：直接安裝">方法一：直接安裝</h3><p>適用者：非常有人品的人。</p>
<p>1. 安裝RubyInstaller（1.9.3），裝完後安裝devkit。  </p>
<p>devkit的安裝可以參考這篇：<a href="http://lee.logdown.com/posts/165890/ruby-on-windows-7-to-install-ruby-on-rails" target="_blank" rel="external">http://lee.logdown.com/posts/165890/ruby-on-windows-7-to-install-ruby-on-rails</a></p>
<p>2. 安裝middleman，在cmd裡面打<code>$ gem middleman</code>。  </p>
<p>我自己的情況是裝起來後能build，但不能跑watch，所以請見方法二：</p>
<h3 id="方法二：用虛擬電腦安裝（VirtualBOX+Vagrant）">方法二：用虛擬電腦安裝（VirtualBOX+Vagrant）</h3><p>1. 安裝Virtual Box4.3.12，因為目前最新版4.3.16版本有BUG不能跑 </p>
<p>2. 安裝RubyInstaller（1.9.3），裝完後安裝devkit，同方法一。</p>
<p>3. 在cmd裡面打 <code>$ gem i vagrant</code>。 </p>
<p>Vagrant其實就是讓人可以製作跟使用「虛擬電腦懶人包」、「一鍵安裝虛擬電腦」的東西。<br>每個懶人包都是一個box，可以在網路上下載別人做好的box安裝。   只要環境沒問題（VM版本等等都沒打架），放給他裝就會迅速裝好一台可以用的虛擬電腦。</p>
<p>4. 用git抓回下面的BOX，打開VirtualBOX界面，然後到該repo 的src目錄下打 <code>$ vagrant up</code>啟動電腦：  </p>
<p><a href="https://github.com/prismic/middleman-vagrant" target="_blank" rel="external">https://github.com/prismic/middleman-vagrant</a></p>
<p>BOX如其名，是個已經包好middleman環境的虛擬電腦。<br><code>$ vagrant up</code>語法是用來啟動虛擬電腦的語法，啟動前要先把Virtual BOX的界面打開才會跑。</p>
<h4 id="寫給對git和cmd不熟的人的安裝與啟動方法：">寫給對git和cmd不熟的人的安裝與啟動方法：</h4><ul>
<li>按「Download the zip」，下載回來解壓縮。</li>
<li>打開解壓縮檔進到「src」資料夾，複製路徑，到cmd裡面打 <code>$ cd 【剛才複製的路徑】</code>，這樣就會進到該路徑下面。</li>
<li>打開Virtual BOX程式，先丟在一旁不管他。</li>
<li>回CMD打 <code>$ vagrant up</code></li>
</ul>
<p>5. 成功啟動電腦後，再來要用SSH連線使用middleman。<br>請想成「要使用虛擬電腦的CMD來操控middleman」。 </p>
<p>直接打 <code>$ vagrant ssh</code>，通常都會收到錯誤訊息（欸  </p>
<h4 id="解決方案：">解決方案：</h4><p>因為要用SSH連線的關係，所以需要安裝SSH軟體。<br>我是用putty這套軟體，所以除了安裝putty以外，還要安裝外掛去讀putty的SSH鍵 。</p>
<p><code>$ vagrant plugin install vagrant-multi-putty</code></p>
<p>6. 通通裝好後，用puttygen做一個private key，更名為<code>insecure_private_key.ppk</code>，</p>
<p>存在<code>C:\Users\【你的使用者名稱】\\.vagrant.d</code>下面</p>
<p>7. 然後再回CMD打 <code>$ vagrant ssh</code>，看一下錯誤訊息。 </p>
<p>他會教你說要去putty設置host name、port和帳號再連線，</p>
<p>這邊其實可以只設host name跟port，連上後再打帳號和密碼（均為vagrant）</p>
<p>8. 感動的收工<br>SSH成功登入後，打 <code>cd src</code>進到src的目錄下，這個目錄就是和上面src相同目錄，只要在這邊打<code>middleman server</code>，就可以架起middleman的server了！  </p>
<h4 id="方法三：用_jRuby_裝">方法三：用 jRuby 裝</h4><p>之所以會有方法三，是因為windows不支援NFS，也就是雖然livereload可以運作，但是因為檔案系統的關係，檔案變動也沒辦法watch到 ＝ 不會自動更新Orz</p>
<p>middleman作者表示，這問題不在middleman身上，要看VirtualBox那邊可不可能改變程式控制共享資料夾的設定。</p>
<p>因為這樣，所以方法二成功後我就去研究其他的方法。然後發現用jRuby裝一樣可以一鍵搞定。</p>
<p>下載jRuby裝完後（不管是用1.9.3或是2.0.0版本都OK），在cmd輸入<code>jRuby -S i middleman</code>就收工了。</p>
<p>但是，jRuby的環境下也一樣不能用LiveReload…………………</p>
<p>（似乎是跟guard-livereload與jRuby不合有關，但相關資料太少了）</p>
<h4 id="結論">結論</h4><ol>
<li>雖然只要有心，還是可以在 windows 7 裝 Middleman ，但 LiveReload 的問題至今不管用哪個方法都無解。</li>
</ol>
<p>目前推論，可能跳槽研究Grant或gulp會好一點的感覺………</p>
<ol>
<li>如果只是想跟我一樣用 autoprefixer + fire.app。<br>可以考慮直接裝 autoprefixer-sublime （爆</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>起因是因為我想要用autoprefixer，但是因為fire.app在windows的環境下讓我沒辦法直接裝。<br>因此就把腦筋動到用Middleman上去。</p>
<p>然而眾所皆知，MAC上只需要一行<code>$ gem i middleman</code>解決的]]>
    </summary>
    
      <category term="Middleman" scheme="http://otoitsuki.info/tags/Middleman/"/>
    
      <category term="前端設計" scheme="http://otoitsuki.info/tags/%E5%89%8D%E7%AB%AF%E8%A8%AD%E8%A8%88/"/>
    
      <category term="前端設計" scheme="http://otoitsuki.info/categories/%E5%89%8D%E7%AB%AF%E8%A8%AD%E8%A8%88/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Windows 轉到 Mac OSX 上的軟體替代清單]]></title>
    <link href="http://otoitsuki.info/%E8%BB%9F%E9%AB%94%E5%B7%A5%E5%85%B7-Windows%20%E8%BD%89%E5%88%B0%20Mac%20OSX%20%E4%B8%8A%E7%9A%84%E8%BB%9F%E9%AB%94%E6%9B%BF%E4%BB%A3%E6%B8%85%E5%96%AE.html"/>
    <id>http://otoitsuki.info/軟體工具-Windows 轉到 Mac OSX 上的軟體替代清單.html</id>
    <published>2014-11-08T16:00:00.000Z</published>
    <updated>2015-05-04T16:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>近來因為換了Mac的關係，所以開始尋找一些免費實用軟體在Mac OSX上的替代軟體。<br>這裡列出的都是系統管理等小工具程式，專業級的大咖程式當然就是乖乖付費的份。<br>而非專業的大咖程式，像是瀏覽器等都有Mac版本，因此也就沒有列出來。</p>
<h3 id="新酷音（智慧型輸入法）">新酷音（智慧型輸入法）</h3><p>用<a href="https://mcbopomofo.openvanilla.org/" target="_blank" rel="external">小麥輸入法</a>代替，有小小的落差：</p>
<ul>
<li>小麥在選字階段不能中英文混打</li>
<li>符號輸入方法有小小不太一樣。</li>
</ul>
<p>所以後來我採用香草輸入法＋新酷音套件。<br>詳細安裝可以參考：<a href="http://j9l.blogspot.tw/2012/09/in-on-mac.html" target="_blank" rel="external">http://j9l.blogspot.tw/2012/09/in-on-mac.html</a><br>上面安裝檔案無法下載的話，請參考這裡：<a href="https://www.ptt.cc/bbs/MAC/M.1370684378.A.EC8.html" target="_blank" rel="external">https://www.ptt.cc/bbs/MAC/M.1370684378.A.EC8.html</a></p>
<h3 id="Q-dir（檔案管理工具）">Q-dir（檔案管理工具）</h3><p>個人非常需要同時開4個視窗且固定排好來管理檔案，但在MAC上似乎連付費軟體也沒辦法滿足我的這個需求。</p>
<p>暫時是以<a href="http://www.trankynam.com/xtrafinder/" target="_blank" rel="external">XtraFinder</a>、<del><a href="http://doublecmd.sourceforge.net/" target="_blank" rel="external">Double Commander</a>（搭配<a href="http://retinizer.mikelpr.com/" target="_blank" rel="external">Retinizer</a>就可以正常顯示hiDPi）</del>，還有<a href="http://blog.boastr.net/" target="_blank" rel="external">BetterTouchTool</a>的 win7Resize window功能頂著用。</p>
<p><a href="http://blog.boastr.net/" target="_blank" rel="external">BetterTouchTool</a> 可以拖移視窗到四個角落，就自動調整視窗尺寸為螢幕的四分之一功能，除了搭配Finder當檔案管理工具以外，其他情況也非常實用。</p>
<h3 id="BandZip（壓縮軟體）">BandZip（壓縮軟體）</h3><p>在MAC上要分成解壓縮和壓縮兩部份來看，以免費軟體來說，目前沒有看到可以兩種需求都對應的軟體。<br>解壓縮的話是用<a href="https://itunes.apple.com/tw/app/the-unarchiver/id425424353?l=zh" target="_blank" rel="external">The Unarchiver</a><br>因為系統內建的解壓縮功能對應unicode有時候有問題，所以改用這套取代預設壓縮功能。<br>壓縮則是參考這篇「<a href="http://hyjk2000.github.io/2013/10/24/add-instant-file-archiving-for-mac-finder-for-free/" target="_blank" rel="external">為 Mac Finder 增加右鍵文件打包壓縮（免費）</a>」安裝右鍵壓縮功能</p>
<h3 id="Revo_uninstaller（反安裝程式）">Revo uninstaller（反安裝程式）</h3><p><a href="http://www.freemacsoft.net/appcleaner/" target="_blank" rel="external">Appcleaner</a></p>
<h3 id="Git（Git管理工具）">Git（Git管理工具）</h3><p>找不到可以代替小烏龜用右鍵管理Git的軟體，目前使用<a href="http://www.sourcetreeapp.com/" target="_blank" rel="external">Sourcetree</a>管理，有GUI。</p>
<h3 id="ditto（剪貼簿管理工具）">ditto（剪貼簿管理工具）</h3><p><a href="http://jumpcut.sourceforge.net/" target="_blank" rel="external">Jumpcut</a> 感覺上沒有像ditto那樣多功能和設定多可以調教，使用上滿方便快速的，也很堪用。</p>
<p>後來發現<a href="http://www.maxbor.net/portfolio/copyless" target="_blank" rel="external">copyless</a>，免費版只能存10個，但調整過熱鍵後用起來很接近ditto的設定。</p>
<p>最後是用 <a href="http://www.clipmenu.com/" target="_blank" rel="external">Clipmenu</a> ，調整過熱鍵後用起來很順手，而且可以存上百個過去剪貼簿。</p>
<h3 id="Launchy（呼叫程式快捷列）">Launchy（呼叫程式快捷列）</h3><p>內建Spotlight就可以取代。</p>
<p>但後來因為 <a href="http://www.alfredapp.com/" target="_blank" rel="external">Alfred</a> 搜尋檔案的功能太強大，讓我不管是呼叫程式還是檔案都是用這套。</p>
<h3 id="XnviewMP（看圖軟體）">XnviewMP（看圖軟體）</h3><p>有出MAC版本，但內建預覽工具就很好用。</p>
<h3 id="Keepass（密碼管理軟體）">Keepass（密碼管理軟體）</h3><p>我是用<a href="https://github.com/mstarke/MacPass" target="_blank" rel="external">Macpass</a>來代替。<br>雖然功能沒有Keepass多，但也相當堪用，未來預計會追加KeepassHttp支援，到時就可以搭配Chrome使用</p>
<h3 id="ShareX（截圖上傳工具）">ShareX（截圖上傳工具）</h3><p>就截圖來說，OSX內建截圖功能就可以滿足我的需求。</p>
<p>不過後來還是用了下面兩套軟體來幹活：</p>
<ul>
<li><p><a href="http://xcatsan.com/simplecap-en/" target="_blank" rel="external">SimpCap</a> 可以先選好格式和要截圖的區域連續截圖，操作方便簡單。</p>
</li>
<li><p><a href="https://itunes.apple.com/us/app/img.urls/id542209299?mt=12" target="_blank" rel="external">Img.urls</a> 結合Imgur分享與截圖的工具，只要是要截圖分享到網路上的操作我都是用這套。</p>
</li>
</ul>
<h3 id="AIMP（音樂播放程式）">AIMP（音樂播放程式）</h3><p>用 <a href="http://www.videolan.org/vlc/" target="_blank" rel="external">VLC Player</a> 代替。</p>
<p>原本也有用 VOX 來代替，介面好看操作也方便，只是音質來說覺得VLC Player聽起來比較順耳。</p>
<h2 id="其他無法取代程式的解決方案">其他無法取代程式的解決方案</h2><p>可以考慮安裝 <a href="https://www.winehq.org/" target="_blank" rel="external">Wine</a> 這樣的Windows程式模擬器。 因為我都是在跑遊戲XD所以是用<a href="http://mattintosh.hatenablog.com/entry/20140706/1404653173" target="_blank" rel="external">EasyWine</a> 。 雖然不是所有程式都相容，不過他甚至連Steam這種非portable軟體都跑得起來。</p>
<h3 id="其他Windows上不需要裝，可是Mac上需要的軟體工具">其他Windows上不需要裝，可是Mac上需要的軟體工具</h3><p><strong><a href="http://asepsis.binaryage.com/" target="_blank" rel="external">Asepsis</a></strong></p>
<p>解決自動增值的 .DS_Store 檔案問題</p>
<p><strong><a href="https://pqrs.org/osx/karabiner/index.html.ja" target="_blank" rel="external">Karabiner</a></strong></p>
<p>專門自訂鍵盤用的軟體。</p>
<p>使用Mac電腦＋PC版本鍵盤時就可用這套來自訂鍵盤操作。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>近來因為換了Mac的關係，所以開始尋找一些免費實用軟體在Mac OSX上的替代軟體。<br>這裡列出的都是系統管理等小工具程式，專業級的大咖程式當然就是乖乖付費的份。<br>而非專業的大咖程式，像是瀏覽器等都有Mac版本，因此也就沒有列出來。</p>
<h3 id="新酷音]]>
    </summary>
    
      <category term="Mac" scheme="http://otoitsuki.info/tags/Mac/"/>
    
      <category term="軟體工具" scheme="http://otoitsuki.info/tags/%E8%BB%9F%E9%AB%94%E5%B7%A5%E5%85%B7/"/>
    
      <category term="軟體工具" scheme="http://otoitsuki.info/categories/%E8%BB%9F%E9%AB%94%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[前端設計相關 Style Guide]]></title>
    <link href="http://otoitsuki.info/%E5%89%8D%E7%AB%AF%E8%A8%AD%E8%A8%88-%E5%89%8D%E7%AB%AF%E8%A8%AD%E8%A8%88%E7%9B%B8%E9%97%9C%20Style%20Guide.html"/>
    <id>http://otoitsuki.info/前端設計-前端設計相關 Style Guide.html</id>
    <published>2014-07-20T16:00:00.000Z</published>
    <updated>2015-05-04T16:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>在網頁前端或是任何資訊相關的專案中，Style Guide是為了統一設計或程式風格而誕生的指導準則（規則集）。</p>
<p>像是Android、iOS等平台或系統都一定會推出Style Guide，讓開發者（特別是設計師）有成套可以遵循的風格和規則。</p>
<p>不過近來很多大型網站也會公開自己網站的Style Guide，這些Style Guide對於前端設計研究也是相當有幫助。據說沒看過Style Guide就不能自稱為UI Designer。</p>
<p>而以程式開發者角度來看，也有Code Style Guide這種東西的存在，主要是為了要統一coding的寫作風格，特別是當很多人一起開發程式時，讓所有人都遵循相同的規範，對於往後檢查和除錯都非常有幫助。</p>
<p>下面收集了一些和前端設計相關的Style Guide，除了給設計師（視覺orUI）看的以外，也有給Developer看的。通常F2E兩種都會用到…………</p>
<p>For Designers</p>
<h3 id="Android_Developers_Style">Android Developers Style</h3><p><a href="http://developer.android.com/design/style/index.html" target="_blank" rel="external">http://developer.android.com/design/style/index.html</a></p>
<h3 id="iOS_Human_Interface_Guidelines">iOS Human Interface Guidelines</h3><p><a href="https://itunes.apple.com/us/book/ios-human-interface-guidelines/id877942287?mt=11" target="_blank" rel="external">https://itunes.apple.com/us/book/ios-human-interface-guidelines/id877942287?mt=11</a></p>
<p>對岸ISUX有轉譯中文版（陸續翻譯中）</p>
<p><a href="http://isux.tencent.com/ios8-human-interface-guidelines.html" target="_blank" rel="external">[ISUX轉譯]iOS 8人機界面指南（一）：UI設計基礎</a></p>
<p><a href="http://isux.tencent.com/ios8-human-interface-guidelines-design-strategies.html" target="_blank" rel="external">[ISUX轉譯]iOS 8人機界面指南（二）：設計策略</a></p>
<p><a href="http://isux.tencent.com/ios8-human-interface-guidelines-technology-html.html" target="_blank" rel="external">[ISUX轉譯]iOS 8人機界面指南（三）：iOS技術（上）</a></p>
<p><a href="http://isux.tencent.com/ios8-human-interface-guidelines-technology.html" target="_blank" rel="external">[ISUX轉譯]iOS 8人機界面指南（三）：iOS技術（下）</a></p>
<h3 id="iOS_7_Human_Interface_Guidelines">iOS 7 Human Interface Guidelines</h3><p><a href="https://developer.apple.com/library/iOS/documentation/UserExperience/Conceptual/MobileHIG/index.html#//apple_ref/doc/uid/TP40006556" target="_blank" rel="external">https://developer.apple.com/library/iOS/documentation/UserExperience/Conceptual/MobileHIG/index.html#//apple_ref/doc/uid/TP40006556</a></p>
<h3 id="Google_Web_Fundamentals_Visual_Style_Guide">Google Web Fundamentals Visual Style Guide</h3><p><a href="https://developers.google.com/web/fundamentals/resources/styleguide/" target="_blank" rel="external">https://developers.google.com/web/fundamentals/resources/styleguide/</a></p>
<h3 id="Yahoo_Design_Pattern_Library">Yahoo Design Pattern Library</h3><p><a href="https://developer.yahoo.com/ypatterns/everything.html" target="_blank" rel="external">https://developer.yahoo.com/ypatterns/everything.html</a>  </p>
<h3 id="Google_Material_Design_Guidelines">Google Material Design Guidelines</h3><p><a href="http://www.google.com/design/spec/material-design/introduction.html" target="_blank" rel="external">http://www.google.com/design/spec/material-design/introduction.html</a></p>
<h2 id="For_Developers">For Developers</h2><h3 id="Google_HTML/CSS_Style_Guide">Google HTML/CSS Style Guide</h3><p><a href="http://google-styleguide.googlecode.com/svn/trunk/htmlcssguide.xml" target="_blank" rel="external">http://google-styleguide.googlecode.com/svn/trunk/htmlcssguide.xml</a></p>
<h3 id="GitHub_styleguide（css、javascript、Ruby）">GitHub styleguide（css、javascript、Ruby）</h3><p><a href="https://github.com/styleguide" target="_blank" rel="external">https://github.com/styleguide</a></p>
<h2 id="推薦文章">推薦文章</h2><h3 id="50_Style_Guide_Tools,_Articles,_Books_and_Resources">50 Style Guide Tools, Articles, Books and Resources</h3><p><a href="http://webdesign.tutsplus.com/articles/50-style-guide-tools-articles-books-and-resources--cms-21209" target="_blank" rel="external">http://webdesign.tutsplus.com/articles/50-style-guide-tools-articles-books-and-resources--cms-21209</a></p>
<p>tuts 的文章，整理了50種Style Guide工具、文章或書籍與參考資源。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在網頁前端或是任何資訊相關的專案中，Style Guide是為了統一設計或程式風格而誕生的指導準則（規則集）。</p>
<p>像是Android、iOS等平台或系統都一定會推出Style Guide，讓開發者（特別是設計師）有成套可以遵循的風格和規則。</p>
<p>不過近]]>
    </summary>
    
      <category term="style guide" scheme="http://otoitsuki.info/tags/style-guide/"/>
    
      <category term="前端設計" scheme="http://otoitsuki.info/tags/%E5%89%8D%E7%AB%AF%E8%A8%AD%E8%A8%88/"/>
    
      <category term="前端設計" scheme="http://otoitsuki.info/categories/%E5%89%8D%E7%AB%AF%E8%A8%AD%E8%A8%88/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[RGBA 2015/07 聚會這裡有一群人研究 Layout 到底是什麼？當我報名這個的時候... 我震驚了！ 筆記]]></title>
    <link href="http://otoitsuki.info/%E5%89%8D%E7%AB%AF%E8%A8%AD%E8%A8%88-RGBA%20201507%20%E9%80%99%E8%A3%A1%E6%9C%89%E4%B8%80%E7%BE%A4%E4%BA%BA%E7%A0%94%E7%A9%B6%20Layout%20%E5%88%B0%E5%BA%95%E6%98%AF%E4%BB%80%E9%BA%BC%EF%BC%9F%E7%95%B6%E6%88%91%E5%A0%B1%E5%90%8D%E9%80%99%E5%80%8B%E7%9A%84%E6%99%82%E5%80%99%E2%80%A6%E6%88%91%E9%9C%87%E9%A9%9A%E4%BA%86%EF%BC%81%E7%AD%86%E8%A8%98%20.html"/>
    <id>http://otoitsuki.info/前端設計-RGBA 201507 這裡有一群人研究 Layout 到底是什麼？當我報名這個的時候…我震驚了！筆記 .html</id>
    <published>2014-07-08T16:00:00.000Z</published>
    <updated>2015-05-04T16:00:00.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Responsive_Web_Design_by_Henry_Lin">Responsive Web Design by <a href="https://speakerdeck.com/h0design" target="_blank" rel="external">Henry Lin</a></h1><p><a href="https://speakerdeck.com/h0design/responsive-web-design" target="_blank" rel="external">https://speakerdeck.com/h0design/responsive-web-design</a></p>
<p>Responsive Web Design 響應式網頁設計是新形態的網頁設計，得重新認識網頁設計的方式。</p>
<p>了解各種裝置的特性與使用情境，規劃出適合手機、平板、電腦的介面。</p>
<ul>
<li>Prototype tool</li>
<li>以資訊架構為輔，規劃頁面流程</li>
<li>用a4紙和便利貼做RWD,適時調整擬真度</li>
<li>「經驗談」增加好感與品質的方法：留白，圖片解析度，</li>
</ul>
<h1 id="排出好體驗_用戶體驗與排版的二三事by_奧革士">排出好體驗 用戶體驗與排版的二三事by <a href="https://speakerdeck.com/augus" target="_blank" rel="external">奧革士</a></h1><p><a href="https://speakerdeck.com/augus/pai-chu-hao-ti-yan-yong-hu-ti-yan-yu-pai-ban-de-er-san-shi" target="_blank" rel="external">https://speakerdeck.com/augus/pai-chu-hao-ti-yan-yong-hu-ti-yan-yu-pai-ban-de-er-san-shi</a></p>
<p>加強閱讀：<a href="http://ogdesign.postach.io/na-xie-ye-mian-pai-ban-xu-yao-liao-jie-de-shi-qing" target="_blank" rel="external">http://ogdesign.postach.io/na-xie-ye-mian-pai-ban-xu-yao-liao-jie-de-shi-qing</a></p>
<p>好</p>
<ul>
<li>排版是把元素條例化，就是傳達<ul>
<li>迷失，因為導航不清楚，版型不一致，非相關訊息太多，找不到重點</li>
<li>困惑：ex一堆下載按鈕，真連結藏起來.模擬兩可</li>
<li>吃力：文字段落長，間距文字問題等</li>
<li>複雜：功能爆多，缺少邏輯排放</li>
<li>生氣：浪費時間，詐騙，打擾使用者</li>
</ul>
</li>
<li>推薦書：Jesse James Garrett: The Elements of User Experience（Ajax之父寫的）</li>
<li>承上，五個層面</li>
<li>使用者的感覺:UX</li>
</ul>
<p>bad</p>
<ul>
<li>舒服：留白，對比，一致色彩，適當的字體</li>
<li>簡單：8020,一致操作，降低信噪比，基本元件，進階展開</li>
<li>安全：用藍色，展示客戶回饋，合作夥伴，處處顯示logo</li>
<li>刪除，組織，隱藏，轉移</li>
</ul>
<h3 id="我原本以為氣象局的網站最多就那樣而已，">我原本以為氣象局的網站最多就那樣而已，</h3><p>直到我看到了這個… by Taylor </p>
<p>中央氣象局改造長這樣：<a href="http://www.taylorhu.com/project/cwb-website-revamp" target="_blank" rel="external">http://www.taylorhu.com/project/cwb-website-revamp</a></p>
<ul>
<li>從氣象局網頁設計得知：網頁越來越像app→重要的先，其他收好</li>
<li>建築<ul>
<li>科比意建築師提出：使用者不同情境下有不同動作，因此建築擺設也不同結構。</li>
<li>新建築五點←可以利用到網頁上<ul>
<li>垂直發展，行動版</li>
<li>屋頂花園，把前衛設計放出來</li>
<li>自由平面</li>
<li>橫向長窗，把螢幕寬利用到滿</li>
<li>自由立面</li>
</ul>
</li>
</ul>
</li>
<li>走到哪，想到哪，車窗，把手等等。跟網頁活動也是一樣。</li>
<li>學習像笨蛋一樣思考，預測白癡的行為</li>
<li>對尺寸和空間安排要有敏感度</li>
</ul>
<p><strong>界面設計黑魔法 - The Dark Art of Interface Design BY Hans Shih </strong><br><a href="http://www.slideshare.net/OortShih/rgba-the-dark-art-of-interface-design" target="_blank" rel="external">http://www.slideshare.net/OortShih/rgba-the-dark-art-of-interface-design</a></p>
<ul>
<li>分析師眼中，訂單和用戶像瀑布般流失</li>
</ul>
<ol>
<li>玩家付出越多越有機會轉換</li>
<li>網站流失不易發覺，就算是專家，也只能找到30趴問題，所以要找使用者測試，做研究。靠設計專業無法發現</li>
<li>Mental module,</li>
<li>我的e政府logo問題：logo不要固定（看不出分類）像雅虎新聞，雅虎股市那樣就很好</li>
<li>看不出是按鈕，點擊率就下降</li>
</ol>
<ul>
<li>「捐贈器官國家比例」為例，結果受到問題影響<ul>
<li>問題越複雜，越偏向default</li>
</ul>
</li>
<li>產品賣不好，不一定可以拿掉。有比較會影響決策</li>
<li>App引導評分，好評送他去評論，壞評請寫信給我們</li>
</ul>
<p><strong>Urban prefer 實體包裝layout策略 BY Tim peng</strong></p>
<p>手機沒電沒做到紀錄</p>
<p>但官網和作品都很棒推薦可以逛逛：<a href="http://www.urbanprefer.com/TC/Index.aspx" target="_blank" rel="external">http://www.urbanprefer.com/TC/Index.aspx</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Responsive_Web_Design_by_Henry_Lin">Responsive Web Design by <a href="https://speakerdeck.com/h0design" target="_blank" rel="externa]]>
    </summary>
    
      <category term="RWD" scheme="http://otoitsuki.info/tags/RWD/"/>
    
      <category term="前端設計" scheme="http://otoitsuki.info/tags/%E5%89%8D%E7%AB%AF%E8%A8%AD%E8%A8%88/"/>
    
      <category term="前端設計" scheme="http://otoitsuki.info/categories/%E5%89%8D%E7%AB%AF%E8%A8%AD%E8%A8%88/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[前端設計、前端開發線上課程網站]]></title>
    <link href="http://otoitsuki.info/%E5%89%8D%E7%AB%AF%E8%A8%AD%E8%A8%88-%E5%89%8D%E7%AB%AF%E8%A8%AD%E8%A8%88%E3%80%81%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC%E7%B7%9A%E4%B8%8A%E8%AA%B2%E7%A8%8B%E7%B6%B2%E7%AB%99.html"/>
    <id>http://otoitsuki.info/前端設計-前端設計、前端開發線上課程網站.html</id>
    <published>2014-06-16T16:00:00.000Z</published>
    <updated>2015-05-04T16:00:00.000Z</updated>
    <content type="html"><![CDATA[<h3 id="Codecademy">Codecademy</h3><ul>
<li>網站：<a href="http://www.codecademy.com/" target="_blank" rel="external">http://www.codecademy.com/</a></li>
<li>開課類別：html、css、javascript、jQuery、Ruby、Python等</li>
<li>教材形式：線上即時coding互動</li>
<li>難度：簡單～中</li>
<li>語言：<del>多國語言</del>英文</li>
<li>簡介：</li>
</ul>
<p>除了提供Javascript、css、jQuery等單一程式語言的可以邊閱讀教材邊coding的互動教學外，也有以實做主題整合多種程式語言的系列課程。</p>
<p><del>支援中文（簡中）、英文與日文等多國語言的介面（只有介面，教材部份還是純英文）。</del></p>
<p>改版後界面變得非常好看，課程內容也充實許多，但沒了多國語言界面。</p>
<h3 id="ドットインストール">ドットインストール</h3><ul>
<li>網站：<a href="http://dotinstall.com/" target="_blank" rel="external">http://dotinstall.com/</a></li>
<li>開課類別 ：舉凡你想的到的各種程式技術幾乎都有</li>
<li>教材形式：影片（付費會員可以取得日文字幕）</li>
<li>難度：簡單～中</li>
<li>語言：日文</li>
<li>簡介：</li>
</ul>
<p>每種課程都提供一系列（多堂）影片供觀看學習，每堂課程影片長度均在3～5分鐘。</p>
<p>特色是教學影片簡短、開課豐富、許多當下最新的程式技術的課程都可以在此找到。</p>
<h3 id="Code_School">Code School</h3><ul>
<li>網站：<a href="http://www.codeschool.com/" target="_blank" rel="external">http://www.codeschool.com/</a></li>
<li>開課類別 ：</li>
<li>教材形式：影片（有英文字幕）、線上即時coding互動</li>
<li>難度：簡單～高</li>
<li>語言：英文</li>
<li>簡介：</li>
</ul>
<p>每種課程都包括上課影片、課程投影片與線上試題練習。<br>課程教材等整體素質品質都很高，有收費課程也有如jQuery初階課程等免費課程。</p>
<h3 id="Tuts+">Tuts+</h3><ul>
<li>網站：<a href="https://tutsplus.com/" target="_blank" rel="external">https://tutsplus.com/</a></li>
<li>開課類別：很多種，推薦網頁設計與jQuery課程。</li>
<li>教材形式：文章、影片。</li>
<li>難度：簡單～高</li>
<li>語言：英文</li>
<li>簡介：</li>
</ul>
<p>全方面的網頁技術網站，有定期最新的文章分享，不定時提供專題影片課程，部份課程可以免費收看。</p>
<h3 id="LearnStreet">LearnStreet</h3><ul>
<li><del>網站：<a href="http://www.learnstreet.com/" target="_blank" rel="external">http://www.learnstreet.com/</a></del></li>
<li><del>開課類別 ：javascript、Ruby、Python</del></li>
<li><del>教材形式：線上即時coding互動、影片</del></li>
<li><del>難度：簡單～中</del></li>
<li><del>語言：英文</del></li>
<li><del>簡介：</del></li>
</ul>
<p><del>提供Javascript和Ruby等語言的線上互動學習課程。除了文字解說以外，也提供影片教學。</del></p>
<p>已關站</p>
<h3 id="Udacity">Udacity</h3><ul>
<li>網站：<a href="https://www.udacity.com/" target="_blank" rel="external">https://www.udacity.com/</a></li>
<li>開課類別 ：</li>
<li>教材形式：影片</li>
<li>難度：簡單～中</li>
<li>語言：英文</li>
<li>簡介：</li>
</ul>
<p>國外知名MOOC，目前裡面提供大量程式語言設計影片課程。<br>另外也有資料分析、UX設計等和網站開方有關的課程。</p>
<h2 id="同場加映">同場加映</h2><h3 id="FX-Ray">FX-Ray</h3><ul>
<li>網站：<a href="http://www.fx-ray.com/" target="_blank" rel="external">http://www.fx-ray.com/</a></li>
<li>開課類別 ：Photoshop</li>
<li>教材形式：影片</li>
<li>難度：中～難</li>
<li>語言：英文</li>
<li>簡介：</li>
</ul>
<p>非常專業且強大的Photoshop技巧影片教學。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="Codecademy">Codecademy</h3><ul>
<li>網站：<a href="http://www.codecademy.com/" target="_blank" rel="external">http://www.codecademy.com]]>
    </summary>
    
      <category term="前端設計" scheme="http://otoitsuki.info/tags/%E5%89%8D%E7%AB%AF%E8%A8%AD%E8%A8%88/"/>
    
      <category term="線上學習" scheme="http://otoitsuki.info/tags/%E7%B7%9A%E4%B8%8A%E5%AD%B8%E7%BF%92/"/>
    
      <category term="前端設計" scheme="http://otoitsuki.info/categories/%E5%89%8D%E7%AB%AF%E8%A8%AD%E8%A8%88/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Windows 付費軟體的免費替代方案【網站規劃與網頁設計篇】]]></title>
    <link href="http://otoitsuki.info/%E8%BB%9F%E9%AB%94%E5%B7%A5%E5%85%B7-Windows%20%E4%BB%98%E8%B2%BB%E8%BB%9F%E9%AB%94%E7%9A%84%E5%85%8D%E8%B2%BB%E6%9B%BF%E4%BB%A3%E6%96%B9%E6%A1%88%E3%80%90%E7%B6%B2%E7%AB%99%E8%A6%8F%E5%8A%83%E8%88%87%E7%B6%B2%E9%A0%81%E8%A8%AD%E8%A8%88%E7%AF%87%E3%80%91.html"/>
    <id>http://otoitsuki.info/軟體工具-Windows 付費軟體的免費替代方案【網站規劃與網頁設計篇】.html</id>
    <published>2012-12-30T16:00:00.000Z</published>
    <updated>2015-05-04T16:00:00.000Z</updated>
    <content type="html"><![CDATA[<p><strong>網頁草圖（ex：Balsamiq Mockups）</strong></p>
<p><strong>Pencil</strong></p>
<ul>
<li><strong>網站：</strong><a href="http://pencil.evolus.vn/en-US/" target="_blank" rel="external">http://pencil.evolus.vn/en-US/</a></li>
<li><strong>下載：</strong><a href="http://pencil.evolus.vn/en-US/Downloads/Application.aspx" target="_blank" rel="external">http://pencil.evolus.vn/en-US/Downloads/Application.aspx</a></li>
<li><strong>類型：</strong>單機版 / 火狐插件版</li>
<li><strong>語言：</strong>英文</li>
<li><strong>說明：  
</strong>功能強大，內建各種類型的設計元件。除了製作網頁草圖以外，也能夠拿來做其他類型的圖表，像在規劃網站時繪製工作流程圖也非常好用。</li>
</ul>
<p><strong>網頁編輯</strong></p>
<p><strong>BlueGriffon</strong></p>
<ul>
<li><strong>網站：</strong><a href="http://bluegriffon.org/" target="_blank" rel="external">http://bluegriffon.org/</a></li>
<li><strong>下載：</strong><a href="http://bluegriffon.org/pages/Download" target="_blank" rel="external">http://bluegriffon.org/pages/Download</a></li>
<li><strong>類型：</strong>單機版</li>
<li><strong>語言：</strong>多國語言，有中文版本</li>
<li><strong>說明：  
</strong>所見即所得的網頁編輯軟體，內建HTML5和WebFont等多種新型網頁技術功能。安裝好後請務必到「選項」中把「自動換行」功能全部關閉，不然讀取編輯原有的html檔案時會發生悲劇。</li>
</ul>
<p><strong>NetBeans</strong></p>
<ul>
<li><strong>網站：</strong><a href="http://www.netbeans.org/" target="_blank" rel="external">http://www.netbeans.org/</a></li>
<li><strong>下載：</strong><a href="http://netbeans.org/downloads/" target="_blank" rel="external">http://netbeans.org/downloads/</a></li>
<li><strong>類型：</strong>單機版</li>
<li><strong>語言：</strong>多國語言，有中文版本</li>
<li><strong>說明：  
</strong>支援HTML/CSS等語法補完的開發工具。因為Eclipse對我來說連安裝都是問題，所以我都用這套，好安裝好上手也非常輕便，語法編輯功能比Dreamweaver還來得好用。</li>
</ul>
<p><strong>Sublime Text2</strong></p>
<ul>
<li><strong>網站：</strong><a href="http://www.sublimetext.com/" target="_blank" rel="external">http://www.sublimetext.com/</a></li>
<li><strong>下載：</strong><a href="http://www.sublimetext.com/2" target="_blank" rel="external">http://www.sublimetext.com/2</a></li>
<li><strong>中文使用說明：</strong><a href="http://docs.sublimetext.tw/" target="_blank" rel="external">http://docs.sublimetext.tw/</a></li>
<li><strong>類型：</strong>支援多平台單機版</li>
<li><strong>語言：</strong>多國語言，有中文版本</li>
<li><strong>說明：  
</strong>其實這套是超級無敵霹靂強大的文字編輯器，延伸元件（package）豐富，各種想的到的coding語言補完功能幾乎都有，也有許多輔助coding時的好用功能，習慣這套之後NetBeans被我捨棄，Dreamweaver幾乎沒開過幾次，強力大推薦的好程式。</li>
</ul>
<p><strong>網頁美術設計編輯</strong></p>
<p><strong>GIMP</strong></p>
<ul>
<li><strong>網站：</strong><a href="http://www.gimp.org/" target="_blank" rel="external">http://www.gimp.org/</a></li>
<li><strong>下載：</strong><a href="http://www.gimp.org/" target="_blank" rel="external">http://www.gimp.org/downloads/</a></li>
<li><strong>類型：</strong>單機版</li>
<li><strong>語言：</strong>多國語言，有中文版本</li>
<li><strong>說明：  
</strong>號稱可以取代Photoshop的強大繪圖軟體，也有layout切版等網頁設計的功能。不過對於用慣PS的人來說GIMP算滿不順手吧。</li>
</ul>
<p><strong>ArtweaverFree</strong></p>
<ul>
<li><strong>網站：</strong><a href="http://www.artweaver.de/home-en/" target="_blank" rel="external">http://www.artweaver.de/home-en/</a></li>
<li><strong>下載：</strong><a href="http://www.artweaver.de/download-en/" target="_blank" rel="external">http://www.artweaver.de/download-en/</a></li>
<li><strong>類型：</strong>單機版</li>
<li><strong>語言：</strong>多國語言，最新版通常都沒有中文版本</li>
<li><strong>說明：  
</strong>介面長得非常像Photoshop，是少數可以正常讀取psd圖層的免費繪圖軟體。</li>
</ul>
<p><strong>教你如何釣這裡沒有的魚</strong></p>
<ul>
<li><strong>網站：</strong><a href="http://alternativeto.net/" target="_blank" rel="external">http://alternativeto.net/</a></li>
<li><strong>說明：  
</strong>依照不同類型整理出各種好用軟體的網站，只要找出想要取代的付費軟體，下面就會列舉出可以作為替代的相關軟體清單。</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong>網頁草圖（ex：Balsamiq Mockups）</strong></p>
<p><strong>Pencil</strong></p>
<ul>
<li><strong>網站：</strong><a href="http://pencil.evolus.]]>
    </summary>
    
      <category term="網頁設計" scheme="http://otoitsuki.info/tags/%E7%B6%B2%E9%A0%81%E8%A8%AD%E8%A8%88/"/>
    
      <category term="軟體工具" scheme="http://otoitsuki.info/tags/%E8%BB%9F%E9%AB%94%E5%B7%A5%E5%85%B7/"/>
    
      <category term="軟體工具" scheme="http://otoitsuki.info/categories/%E8%BB%9F%E9%AB%94%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[デビルサバイバー2（Devil Survivor2）自家設定]]></title>
    <link href="http://otoitsuki.info/%E5%90%8C%E4%BA%BA%E4%BA%8C%E5%89%B5-Devil-Survivor2%E8%87%AA%E5%AE%B6%E8%A8%AD%E5%AE%9A.html"/>
    <id>http://otoitsuki.info/同人二創-Devil-Survivor2自家設定.html</id>
    <published>2012-10-14T16:00:00.000Z</published>
    <updated>2015-05-04T16:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>這邊為主角人物設定，以及腦內補完的各輪劇情。<br>簡單來說就是我心中（腦內）的DS2世界介紹，理所當然有劇情洩漏。<br>另外我家是「憂う者X主、主ヤマ主、純吾X主」  </p>
<h2 id="主人公設定">主人公設定</h2><p><strong>牧上黎華（まきかみれいか）</strong>  </p>
<p>個性隨和好相處，很重視朋友、夥伴之間的感情。相較於女生來比較習慣和男生相處。<br>由於名字很像女孩子的關係，小時候時常被人嘲笑欺負，不過個人倒是完全不在意。<br>喜歡日式料理，最近喜歡的食物是某人做的茶碗蒸XD<br>擁有非同常人的幽默感，不論天地變異或各種緊急狀況都可以很輕鬆地開玩笑，時常因此讓人捏一把冷汗，反問他說「你是認真的嗎？」。<br>然而認真起來也是會表現出相當冷靜可靠的一面，有時候為了重要的人甚至會毫不考慮自己的處境而奮力一搏。<br>儘管在惡魔召喚方面，潛藏著所有人都無法預測的強大實力，然而他自己本身卻沒有因此而感到有所特別。  </p>
<p>簡單來說就是天然呆、仲間思い、不思議でおもしろい。<br>一言以蔽之，是個和純吾一拍即合的笨蛋。  </p>
<p>從ニカイア開始一直到世界的巨變，一連串的事情都讓他感到不知所措，但為了生存下去，他仍然不得不做出選擇。並且在重複歷經三輪「世界毀滅前七天」中逐漸成長，在過程中不斷學習何謂正確的選擇，最終是和夥伴們證明人類的可能性，取回不再受控制管理的原本世界。  </p>
<p>交友關係方面，大地對他來說是少數擁有多年交情的死黨，非常信賴大地。<br>而一開始認識大和時，大和對他來說是抱持著肯收留自己和朋友的恩人，同時也對於比自己小一歲的人能夠這麼能幹感到驚訝。相處一段時間之後，意外發現大和的貴為局長但卻缺乏生活常識的一面，因此開始對大和有所改觀，認為大和很可愛，看著他吃章魚燒的樣子也覺得有種幸福感←愛好盲目  </p>
<p>第一眼看到憂う者時，就有非常親切的感覺。從來都不曾認定憂う者是可疑者或壞人。<br>進而深入瞭解憂う者是到第二輪憂う者路線的時候，對於憂う者有時脫離常人但又試著去理解常人的一面感到有趣。事實上本身個性也的確和憂う者相當合得來，大概是怪胎二人組的感覺。  </p>
<p>和純吾則是一拍即合的笨蛋搭檔，喜歡純吾，喜歡純吾的茶碗蒸，喜歡純吾保護夥伴的帥氣模樣。<br>雖然純吾比較喜歡啓太，但是和純吾一起欺負（？）啓太對他來說也是很有趣的事情。<br>相較大和和憂う者起來，這邊很友誼。  </p>
<h2 id="輪設定"><strong>輪設定</strong></h2><h3 id="第一輪：大和路線"><strong>第一輪：大和路線</strong></h3><p><em>「雖然我愛你，但我知道，選擇你和你的理想並非正確。」←欸</em>  </p>
<p>一開始第一輪直到第五天，儘管所有夥伴都對他抱有高度期盼，黎華仍然沒有自己的主見。對於憂う者的問題，他也無法正確回答，最後只能落寞看對方離去。<br>在猶豫不決該怎麼做的時候，受到大和的說服，即使對實力主義沒什麼概念，但由於相信大和總是深思熟慮，想的比自己多，所以終究選擇和大和在一起。<br>進了實力主線路線後，大和仍總覺得黎華是在裝傻，不覺得對方只是個天然呆。黎華獨有的幽默感到了實力主義這邊沒人能理解，對此大和表示他有時候會感到很不爽。  </p>
<p>然而打敗了世界的管理者，讓世界轉為實力主義至上後，黎華卻開始覺得有哪邊怪怪的。<br>看到大家人們彼此失去了夥伴之間的牽絆，而只是以實力為主的現實情境後，黎華開始懷疑自己的選擇。<br>這段時間，黎華也親眼看見過去和自己有所關係的人，因為弱小而被世界淘汰。也看見不認同大和作法的人一個接一個想要暗殺大和，雖然全部都以失敗告終，但是黎華的確從那些人的身上，看到了自己所選擇的世界的醜惡與無情，同時，也開始瞭解到非常重要的關鍵。  </p>
<p>沒有人能夠永遠強大下去，以力量支撐起來的ジプス的霸權，也遲早會遭受更強大力量所吞沒。<br>而到了那個時候，以大和為首的這些人會怎樣？<br>黎華閉上眼，之前在自己眼前一個個遭受無情滅殺的無力親友和刺殺者的下場歷歷在目。<br>於是黎華確實學到、親身感受到何謂後悔的感情。  </p>
<p>「ヤマト，這真的是你的理想的世界嗎？」<br>從來不曾對於大和所作所為提出疑問的黎華，在某天用著彷彿不經意的口吻，開口向大和緩緩提問。<br>大和起初雖然稍微有些吃驚，但仍毫無懷疑地再次闡述自己追求以以實力為唯一標準的世界這個理念。<br>他所知道的大和從來沒有改變，心裡替這個事實感到安心的黎華，淡淡地揚起弦月般的微笑，用著像是幾分無奈的口氣進而追問。<br>「那麼，如果有一天我失去力量的話，ヤマト也會拋棄我而去嗎？」<br>這次大和沒有立刻回答他，做了一定程度的停頓後才再次開口。<br>「你是我所認可的男人，我比任何人都還要瞭解你的力量，我知道你絕不會淪落到那種地步。」  </p>
<p>黎華對於大和的回答，只是在齒間中小小聲念著「是這樣啊……」作為回應。<br>事實上比起自己被拋棄，他更害怕大和遲早有一天會失勢，然後會有和那些過去被大和稱之為「弱者」的人同樣下場。<br>畢竟力量這種東西，不會是永久的。<br>而藉由強大力量而互相牽起的兩人之間的關係，也不會是永恆的。<br>一直到了結局很久之後，黎華才發現自己的選擇是錯誤的。<br>儘管大和的回答並沒有讓他安心，但的確讓他下了決心。  </p>
<p>然而黎華卻不知道他自己的憂心的確傳遞給了大和。<br>當晚，黎華一如往常打開自己在ジプス本部的房門，對於房內情境困惑了幾秒後又默默關上房門。<br>直到確定自己沒有走錯房間後，黎華再次打開自己的房門，然後帶著些微困擾的苦笑叮嚀房內的人。  </p>
<p>「大和，你走錯房間了唷。」  </p>
<p>房內的大和保持一副「這裡就是我的房間」的態度，沒有對於自己的來意多做說明。<br>不過黎華從大和臉上的表情中仍可窺得對方心中偏向不滿的情緒。<br>當然，對於天然呆屬性的黎華來說，他是不會帶著「該生氣的人應該是莫名其妙被佔據房間的自己吧？」這種想法。<br>以近乎是命令的口氣，嘴裡唸著像是抱怨的內容，大和要黎華快點進房休息，不然自己明天爬不起來辦公的話，帳全部都要算在黎華身上。<br>有些無奈，也有些驚喜，然而也有些是釋懷，在這樣雜綜各種情緒的心態下，黎華聽從大和的話，進了房，然後躺進對於兩個人來說有些擠迫的單人床。  </p>
<p>熄燈後的夜晚，大和在背對黎華的狀態下，平靜地接續早上兩人的話題。<br>「我原本以為你所有的表現都只是偽裝，想說那就是你的處世之道，儘管和我完全相反，我也覺得那沒什麼不好。」<br>「不過最近我才發現，你還真的是對你自己一無所知。」<br>「咦大和，你是故意來挖苦我的嗎？」<br>「我是想告訴你，你應該要再對自己更有自信點。」  </p>
<p>「擁有強大力量的你，就是這個世界是站在我這邊最好的證明。所以不要害怕，黎華，只要和我在一起，不管任何目標我們都能達成。」  </p>
<p>翻過身去的大和，並沒有看到此時黎華的表情。<br>面露類似於懊悔的悲傷，黎華沒有開口回應大和，而在他心中所下的那個決定，也沒有因大和的這番話而動搖。<br>此刻在黎華的心中，充斥著跟過去他所體驗到，卻意義不同的「後悔」的心情。<br>然而黎華清楚知道再來他所要做的事情，絕對不會被大和所諒解，因此他也不會選擇在此開口道歉。<br>也許有一天，刺扎心中的那份後悔，會轉為他繼續生存的動力。<br>因為這樣的世界是他當時所選擇的，而接下來要做的決定，的選擇。  </p>
<p>隔天早上，也是在這個實力至上世界的最後一天，黎華在桌上留下給大和的信，背著大和再次選擇站在ポラリス面前。<br>這次他用壓倒性的力量和強者，也就是他自身的願望要求改變世界，藉由アカシックレコード回到世界崩壞的前七天。  </p>
<p>嘈雜的人聲，彼此彼落的紙卷翻閱聲，於是他再次於考場睜開雙眼……  </p>
<h3 id="第二輪：憂う者路線"><strong>第二輪：憂う者路線</strong></h3><p><em>「新的管理者與人類的可能性，這次的話一定能夠開創不同的世界。」</em>  </p>
<p>基本上這輪黎華對全員的緣是衝到3或以上，大和5。  </p>
<p>這次他選擇了正確的回答，揭示新的道路。在經過成長和反思後，黎華決定和サダク一起創造新世界，認為這是能夠讓大家都可以平安活下去的可能性。<br>這次對黎華來說還有個意外的收穫，就是サダク和自己非常合得來，是繼純吾之後又一個懂自己的幽默點，然後聊天起來非常投機又讓自己覺得有趣的人。黎華滿懷信心，相信這次一定可以再次牽起大和的手，創造不是實力主義，但卻又完美的世界。  </p>
<p>然而事實上是，ヤマト最後拒絕了他的要求。並且死在黎華懷裡。  </p>
<p>「如果有來世，我想在你身旁瞧瞧你所創造的理想世界。」<br>一絲鮮紅的血流，靜靜從大和的唇緣流下。帶著微笑道完這句話後，大和閉眼嚥下最後一口氣。  </p>
<p>不過，最讓黎華衝擊的，還是最後面和サダク的分離。<br>原本黎華以為至少可以和其他夥伴一起創造新世界，證明日本這個國家是值得大和去保護，峰津院家所做的一切一直都沒有白費。<br>然而，世界重設的同時，黎華又再次失去了最重要的人。  </p>
<p>「サダクーーーーーーーーーーーーーーー！」  </p>
<p>最後，黎華想辦法再次見到了失去人類形體的サダク，請他把世界恢復到過去滅亡前七天。  </p>
<p>「我還沒有向你證明，人類真正的可能性。」  </p>
<p>被黎華堅定的眼神所說服，世界新的管理者同意他的要求，實現了他在理想世界上最後一個願望。  </p>
<h3 id="最終輪：大團圓ED"><strong>最終輪：大團圓ED</strong></h3><p><em>「從此之後三人過著幸福快樂的三人行生活，副標題是峰津院大和的暴走」</em>←  </p>
<p>最後一次，經歷兩次倒數七天的黎華，成功說服大和和眾人，一起尋找世界的可能性。並且以當年那番人類可能論說詞成功阻止サダク死亡，帶サダク一起去見ポラリス。<br>在打倒ポラリス後，ポラリス雖然放手了世界的管理權，但是仍然暗示若是人類繼續墮落，必將會有新的管理者降臨來改革世界。<br>但是黎華仍然堅持相信，他們會努力不讓世界再次陷於危機。<br>最後在サダク協助下，利用アカシックレコード成功恢復世界。並且在黎華以失去操控惡魔等特別力量為代價，讓過去一同奮戰的各個夥伴的記憶都保留下來，和夥伴們一起在原本的世界上過著普通的每一天。  </p>
<p>和過去的最大不同點就是大和主角サダク三人行狀態←欸  </p>
<p>大和仍然是作為峰津院當家，為了保護日本而繼續於水面下領導JPS，然而當表面政權做出不當的決策時，大和也是會利用各種壓力脅迫表面政權，企圖以自己的方法將日本導向更好得未來。除此之外，大和在受黎華的影響下，除了在粘著黎華的サダク前面以外，<br>思考和態度都有逐漸軟化，JPS的局員也對於這樣的局長獻上最大的敬意和忠誠。  </p>
<p>而サダク則是自己選擇了成為人類，和黎華一樣失去了特殊能力。<br>然而在他的眼中，黎華永遠都是最特別、最閃耀光亮的人類，並且以黎華最要好得朋友自居，約好將會永遠待在黎華身邊。  </p>
<p>比照サダク和黎華每天甜甜蜜蜜仍是奇妙兩人組的互動，大和每天除了忙公事以外都在吃悶醋耍傲嬌，暗暗策劃著如何暗殺掉サダク。  </p>
<p>The world is still full of possibility and chance.<br>They choose another way to be survivors in the world.  </p>
<p>END.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>這邊為主角人物設定，以及腦內補完的各輪劇情。<br>簡單來說就是我心中（腦內）的DS2世界介紹，理所當然有劇情洩漏。<br>另外我家是「憂う者X主、主ヤマ主、純吾X主」  </p>
<h2 id="主人公設定">主人公設定</h2><p><strong>牧上黎華（まきかみれ]]>
    </summary>
    
      <category term="DS2BR" scheme="http://otoitsuki.info/tags/DS2BR/"/>
    
      <category term="同人二創" scheme="http://otoitsuki.info/tags/%E5%90%8C%E4%BA%BA%E4%BA%8C%E5%89%B5/"/>
    
      <category term="同人二創" scheme="http://otoitsuki.info/categories/%E5%90%8C%E4%BA%BA%E4%BA%8C%E5%89%B5/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[智慧型手機AVG遊戲的遊戲引擎（製作工具）]]></title>
    <link href="http://otoitsuki.info/%E7%8D%A8%E7%AB%8B%E9%81%8A%E6%88%B2-%E6%99%BA%E6%85%A7%E5%9E%8B%E6%89%8B%E6%A9%9FAVG%E9%81%8A%E6%88%B2%E7%9A%84%E9%81%8A%E6%88%B2%E5%BC%95%E6%93%8E%EF%BC%88%E8%A3%BD%E4%BD%9C%E5%B7%A5%E5%85%B7%EF%BC%89.html"/>
    <id>http://otoitsuki.info/獨立遊戲-智慧型手機AVG遊戲的遊戲引擎（製作工具）.html</id>
    <published>2012-06-14T16:00:00.000Z</published>
    <updated>2015-05-04T16:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>這裡所指的AVG遊戲（Adventure Game）中文通常翻譯成文字冒險遊戲。<br>通常是以文字劇情為主要賣點和特色，大多數AVG遊戲裡面會讓玩家利用選項來決定劇情的發展分歧。<br>在日本是相當常見的一種遊戲類型，時常聽到的「美少女遊戲（<a href="http://ja.wikipedia.org/wiki/%E3%82%AE%E3%83%A3%E3%83%AB%E3%82%B2%E3%83%BC" target="_blank" rel="external">ギャルゲー</a>）」和「乙女向遊戲（<a href="http://ja.wikipedia.org/wiki/%E4%B9%99%E5%A5%B3%E3%82%B2%E3%83%BC%E3%83%A0" target="_blank" rel="external">乙女ゲーム</a>）」等絕大部分都是AVG類型的遊戲。</p>
<p>因此，在日本出現很多AVG的遊戲引擎（遊戲製作工具），專門（但不限定只能）用來撰寫AVG類型遊戲。<br>這種工具的特色就是即使不會C＃或Java等語言，也可以利用比較簡單，近似於html或是VB語言的方式來寫出AVG遊戲。<br>由於這種工具上手門檻較低，因此絕大部分<a href="http://zh.wikipedia.org/zh-tw/%E5%90%8C%E4%BA%BA%E9%81%8A%E6%88%B2" target="_blank" rel="external">同人遊戲</a>（也可以說是日本地區的<a href="http://zh.wikipedia.org/zh-tw/%E7%8B%AC%E7%AB%8B%E6%B8%B8%E6%88%8F" target="_blank" rel="external">獨立遊戲</a>）都使用這樣的工具來做遊戲，當然也有部份商業遊戲公司也在使用。<br>其中最著名的PC平台遊戲製作工具為<a href="http://kikyou.info/tvp/" target="_blank" rel="external">吉里吉里</a>和<a href="http://www.nscripter.com/" target="_blank" rel="external">NScripter</a>，這兩套工具都是專門用來撰寫PC上的遊戲。<br>而進入智慧型手機發達的年代後，也出現不少智慧型手機平台（主要是iOS與Android）上的遊戲製作工具。<br>基於方便上手學習等諸多考量，這些智慧型手機的AVG遊戲引擎許多都承襲了之前PC平台的遊戲引擎的概念與語法。</p>
<p>是乎，下面所整理的各種遊戲引擎說明中，會一直提到該引擎是相似於哪個PC平台的遊戲引擎的語法。<br>同理，本懶人包所彙整的所有遊戲引擎都是日本方面開發的工具，也就是網站語言均為日文，不過絕大部分的遊戲引擎只要調整編碼，都可以製作出各國語言的遊戲。</p>
<hr>
<p><strong>Artemis Engine</strong></p>
<ul>
<li>網站：<a href="http://www.ies-net.com/" target="_blank" rel="external">http://www.ies-net.com/</a></li>
<li>支援系統平台：Windows,iOS,Android</li>
<li>說明：</li>
</ul>
<p>最早推出的AVG遊戲引擎，語法和吉里吉里有很大的共通性，穩定度也非常良好，也有商業遊戲採用此遊戲引擎，可以算是目前日本最常被使用來作手機AVG遊戲的工具。</p>
<p>優點如下：發展的早所以使用者多、（相較之下）穩定＆支援的裝置多等等。其中個人覺得最出色的是對於原生系統操控功能相當完善穩定（EX：智慧型手機上的一指兩指三指點擊等等）。</p>
<p>目前沒有公開給不特定對象下載，必須私下寫信給設計者索取工具。</p>
<p>個人負責的Windows/Android遊戲<a href="http://shizuyuki.herokuapp.com/" target="_blank" rel="external">「給寧靜的雪」</a>也是利用此套工具製作。</p>
<p><strong>ADV+++</strong></p>
<ul>
<li>網站：<a href="http://www.yox-project.com/jp/adv_ppp" target="_blank" rel="external">http://www.yox-project.com/jp/adv_ppp</a></li>
<li>支援系統平台：Windows,iOS</li>
<li>說明：</li>
</ul>
<p>號稱專業級的遊戲引擎，並且提供付費的Developer License，提供購買此授權的使用者進一步的協助與服務。</p>
<p><strong>AIRNovel</strong></p>
<ul>
<li>網站：<a href="http://famibee.web.fc2.com/intro/home.htm" target="_blank" rel="external">http://famibee.web.fc2.com/intro/home.htm</a></li>
<li>支援系統平台：Windows,Mac,WEB,iOS,Android</li>
<li>說明：</li>
</ul>
<p>以Adobe AIR技術為基礎的遊戲引擎。對應平台非常的多，甚至可以把遊戲作到Chrome Web Store上面。</p>
<p><strong>TyranoScript（ティラノスクリプト）</strong></p>
<ul>
<li>網站：<a href="http://tyrano.jp/" target="_blank" rel="external">http://tyrano.jp/</a></li>
<li>支援系統平台：Windows,WEB,iOS,Android</li>
<li>說明：</li>
</ul>
<p>和吉里吉里2/KAG的語法有互換性，而且也可以應用網頁語法（HTML5、CSS3等）的網頁技術作功能擴充。</p>
<p>3.0版後推出了<a href="http://b.tyrano.jp/" target="_blank" rel="external">ティラノビルダー</a>，也就是GUI界面的TyranoScript編輯器，非常容易入門上手，大力推薦。</p>
<p><strong>KAS</strong></p>
<ul>
<li>網站：<a href="http://studiomikan.net/kas/" target="_blank" rel="external">http://studiomikan.net/kas/</a></li>
<li>支援系統平台：Android</li>
<li>說明：</li>
</ul>
<p>專門針對Android平台的製作工具，所使用的語法和吉里吉里2/KAG的KAG語法幾乎一樣。</p>
<p><strong>羽々斬</strong></p>
<ul>
<li>網站：<a href="http://kaede-software.com/habakiri/android/" target="_blank" rel="external">http://kaede-software.com/habakiri/android/</a></li>
<li>支援系統平台：Android</li>
<li>說明：</li>
</ul>
<p>嚴格來說不是一套獨立的製作工具，而是將吉里吉里2/KAG移植到Android的移植系統。</p>
<p>目前還在開發中，尚未完整對應吉里吉里2，像是個人愛用的KAGEX系統就移植不上去。</p>
<p><strong>Novel-Press</strong></p>
<ul>
<li>網站：<a href="http://houser-home.net/novel-press/top_top.html" target="_blank" rel="external">http://houser-home.net/novel-press/top_top.html</a></li>
<li>支援系統平台：WEB,Android</li>
<li>說明：</li>
</ul>
<p>似乎是用Java所寫成的工具，雖然能用web瀏覽器開啟，但iOS上似乎無法正常執行。</p>
<p><strong>LemoNovel</strong></p>
<ul>
<li>網站：<a href="http://www.le-mo.jp/lemo/products/LemoNovel/index.htm" target="_blank" rel="external">http://www.le-mo.jp/lemo/products/LemoNovel/index.htm</a></li>
<li>支援系統平台：WEB,iOS,Android</li>
<li>說明：</li>
</ul>
<p>以Adobe AIR技術為基礎的遊戲引擎。</p>
<p>由於支援swf檔的關係，對於使用flash做動畫的製作者來說是可以說是移植到智慧型手機上的救星（大概）</p>
<p><strong>O₂ Engine（ノベルスフィアデベロッパープログラム）</strong></p>
<ul>
<li>網站：<a href="https://developer.novelsphere.jp/" target="_blank" rel="external">https://developer.novelsphere.jp/</a></li>
<li>支援系統平台：WEB,iOS,Android</li>
<li>說明：</li>
</ul>
<p><a href="http://novelsphere.jp/" target="_blank" rel="external">ノベルスフィア</a>專屬的遊戲引擎。</p>
<p><a href="http://novelsphere.jp/" target="_blank" rel="external">ノベルスフィア</a>是從軟體工具到上架販售全都包辦的平台。如果想要用O₂ Engine但卻不藉由<a href="http://novelsphere.jp/" target="_blank" rel="external">ノベルスフィア</a>上架，就需要另外支付費用。</p>
<p>O₂ Engine的語法也和吉里吉里2/KAG的KAG語法大同小異，部份有差異的功能則是加上前綴「o2_」作為區分。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>這裡所指的AVG遊戲（Adventure Game）中文通常翻譯成文字冒險遊戲。<br>通常是以文字劇情為主要賣點和特色，大多數AVG遊戲裡面會讓玩家利用選項來決定劇情的發展分歧。<br>在日本是相當常見的一種遊戲類型，時常聽到的「美少女遊戲（<a href="http:/]]>
    </summary>
    
      <category term="手機遊戲" scheme="http://otoitsuki.info/tags/%E6%89%8B%E6%A9%9F%E9%81%8A%E6%88%B2/"/>
    
      <category term="獨立遊戲" scheme="http://otoitsuki.info/tags/%E7%8D%A8%E7%AB%8B%E9%81%8A%E6%88%B2/"/>
    
      <category term="遊戲引擎" scheme="http://otoitsuki.info/tags/%E9%81%8A%E6%88%B2%E5%BC%95%E6%93%8E/"/>
    
      <category term="遊戲製作" scheme="http://otoitsuki.info/tags/%E9%81%8A%E6%88%B2%E8%A3%BD%E4%BD%9C/"/>
    
      <category term="獨立遊戲" scheme="http://otoitsuki.info/categories/%E7%8D%A8%E7%AB%8B%E9%81%8A%E6%88%B2/"/>
    
  </entry>
  
</feed>